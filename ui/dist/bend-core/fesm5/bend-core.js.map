{"version":3,"file":"bend-core.js","sources":["ng://bend-core/lib/model/base-data.ts","ng://bend-core/lib/model/crud/base-crud.data.ts","ng://bend-core/lib/model/user.data.ts","ng://bend-core/lib/model/authority-crud.data.ts","ng://bend-core/lib/model/account.model.ts","ng://bend-core/lib/model/crud/base-flexible-crud.data.ts","ng://bend-core/lib/model/crud/page-request.data.ts","ng://bend-core/lib/model/crud/response/bend-status.enum.ts","ng://bend-core/lib/model/crud/response/bend-response.model.ts","ng://bend-core/lib/model/crud/response/data-response.model.ts","ng://bend-core/lib/model/crud/response/extra-response.model.ts","ng://bend-core/lib/model/crud/response/only-extra-response.model.ts","ng://bend-core/lib/model/fetch/field-definition.model.ts","ng://bend-core/lib/model/fetch/domain-description.model.ts","ng://bend-core/lib/model/fetch/field-description.model.ts","ng://bend-core/lib/model/fetch/fetch-response.model.ts","ng://bend-core/lib/model/fetch/fetch-definition.model.ts","ng://bend-core/lib/security/authorities-constants.ts","ng://bend-core/lib/service/util/create-request-option.util.ts","ng://bend-core/lib/environments/bend-core-constants.ts","ng://bend-core/lib/service/base.service.ts","ng://bend-core/lib/security/auth/bend-account.service.ts","ng://bend-core/lib/security/http/http-status.ts","ng://bend-core/lib/security/auth/abstract-authentication-service.ts","ng://bend-core/lib/service/console/console.service.ts","ng://bend-core/lib/service/storage/storage-service.ts","ng://bend-core/lib/security/auth/bend-authentication-service.ts","ng://bend-core/lib/security/route/router-activate.interceptor.ts","ng://bend-core/lib/security/http/interceptor/request-token-interceptor.ts","ng://bend-core/lib/security/directive/bend-is-authenticated.directive.ts","ng://bend-core/lib/security/directive/bend-has-any-authority.directive.ts","ng://bend-core/lib/service/app-util-service.ts","ng://bend-core/lib/service/fetch/sql-fetch-definition.service.ts","ng://bend-core/lib/service/text/text-processing.service.ts","ng://bend-core/lib/compile/bend-flexible-compiler.service.ts","ng://bend-core/lib/security/http/interceptor/routing-database-interceptor.ts","ng://bend-core/lib/bend-core.module.ts","ng://bend-core/public-api.ts","ng://bend-core/bend-core.ts"],"sourcesContent":["export class BaseData {\r\n  public id: number;\r\n  public active?: boolean;\r\n}\r\n","import {BaseData} from '../base-data';\r\n\r\nexport class BaseCrudData extends BaseData {\r\n  lastChangedDate: Date;\r\n  lastChangedBy: string;\r\n}\r\n\r\nexport class BaseCrudViewData extends BaseData {\r\n  primary: string;\r\n  secondary: string;\r\n}\r\n","import {AuthorityCrudData} from './authority-crud.data';\r\nimport {BaseCrudData} from './crud/base-crud.data';\r\n\r\nexport class UserCrudData extends BaseCrudData {\r\n  constructor(\r\n    public username?: string,\r\n    public email?: string,\r\n    public password?: string,\r\n    public authorities?: AuthorityCrudData[]\r\n  ) {\r\n    super();\r\n  }\r\n}\r\n","import {BaseCrudData} from './crud/base-crud.data';\r\n\r\nexport class AuthorityCrudData extends BaseCrudData {\r\n  public name: string;\r\n}\r\n","export class AccountInfo {\r\n  constructor(\r\n    public username?: string,\r\n    public authenticated?: boolean,\r\n    public authorities?: string[],\r\n    public token?: string,\r\n    public tokenLiveTime?: number\r\n  ) {\r\n  }\r\n}\r\n\r\nexport class LoginInfo {\r\n  username?: string;\r\n  rememberMe?: boolean;\r\n  password?: string;\r\n}\r\n\r\nexport enum LogoutRule {\r\n  ALL_SESSION,\r\n  CURRENT_SESSION,\r\n  RATHER_THAN_CURRENT_SESSION,\r\n  RATHER_THAN_CURRENT_IP,\r\n  CURRENT_IP\r\n}\r\n\r\nexport class LogoutInfo {\r\n  public token?: string;\r\n  public logoutRule?: LogoutRule;\r\n}\r\n","export class BaseFlexibleCrudViewData {\r\n  columns: string[];\r\n  values: string[][];\r\n  indexes: FlexibleIndex[];\r\n  idIndex: number;\r\n}\r\n\r\nexport class FlexibleIndex {\r\n  dynamic: boolean;\r\n  index: number;\r\n  datatype: string;\r\n  dataFormat: string;\r\n  flexibleRule: FlexibleRule;\r\n}\r\n\r\nexport class FlexibleRule {\r\n  name: string;\r\n  fromIndices: number[];\r\n  indicesDataTypes: string[];\r\n  referenceValues: string[];\r\n  rulePolicy: FlexibleRulePolicy;\r\n}\r\n\r\nexport enum FlexibleRulePolicy {\r\n  CHECKED_BY_NULL,\r\n  CHECKED_BY_BOOLEAN\r\n}\r\n\r\nexport const FlexibleRulePolicyTexts = {\r\n  CHECKED_BY_NULL: 'CHECKED_BY_NULL',\r\n  CHECKED_BY_BOOLEAN: 'CHECKED_BY_BOOLEAN'\r\n};\r\n\r\nexport const FlexibleRuleNameTexts = {\r\n  OR: 'OR',\r\n  AND: 'AND',\r\n  BOOL: 'BOOL'\r\n};\r\n\r\nexport const FlexibleDataTypes = {\r\n  STRING: 'STRING',\r\n  DATE: 'DATE'\r\n};\r\n","export class Page {\r\n  constructor(\r\n    public page?: number,\r\n    public size?: number\r\n  ) {\r\n  }\r\n\r\n  public static defaultPage(): Page {\r\n    return new Page(0, 20);\r\n  }\r\n}\r\n","export enum BendStatus {\r\n  SUCCESS,\r\n  FAILURE,\r\n  FORBIDDEN\r\n}\r\n\r\nexport const BendStatusText = {\r\n  SUCCESS: 'SUCCESS',\r\n  FAILURE: 'FAILURE',\r\n  FORBIDDEN: 'FORBIDDEN'\r\n};\r\n","import {BendStatus} from './bend-status.enum';\r\n\r\nexport class BendResponse {\r\n  public status: BendStatus;\r\n  public dataTypes: string[];\r\n}\r\n","import {BendResponse} from './bend-response.model';\r\n\r\nexport class DataResponse<DataType> extends BendResponse {\r\n  public data: DataType;\r\n}\r\n\r\nexport class PageableDataResponse<Data> extends DataResponse<Data> {\r\n  totalPages: number;\r\n  totalElements: number;\r\n}\r\n","import {DataResponse} from './data-response.model';\r\n\r\nexport class ExtraResponse<ExtraDataType, DataType> extends DataResponse<DataType> {\r\n  public extra: ExtraDataType;\r\n}\r\n","import {BendResponse} from './bend-response.model';\r\n\r\nexport class OnlyExtraResponse<ExtraDataType> extends BendResponse {\r\n  public extra: ExtraDataType;\r\n}\r\n","import {BaseData} from '../base-data';\r\n\r\nexport class FieldDefinition extends BaseData {\r\n  public domainName?: string;\r\n  public fieldName?: string;\r\n  public value?: string;\r\n}\r\n\r\n","import {BaseData} from '../base-data';\r\n\r\n\r\nexport class DomainDescription extends BaseData {\r\n  domainName?: string;\r\n  packageName?: string;\r\n  hasPermissionElExpression?: string;\r\n  superDomain?: DomainDescription;\r\n}\r\n","import {DomainDescription} from './domain-description.model';\r\nimport {BaseData} from '../base-data';\r\n\r\n\r\nexport class FieldDescription extends BaseData {\r\n  fieldName?: string;\r\n  fieldTitle?: string;\r\n  dataType?: string;\r\n  domainDescription?: DomainDescription;\r\n  hasPermissionElExpression?: string;\r\n}\r\n","\r\nexport enum FetchResponseType {\r\n  SINGLE, LIST, MAP\r\n}\r\n\r\nexport enum FetchResponseDataType {\r\n  NUMBER, STRING\r\n}\r\nexport class FetchResponse {\r\n  key: string;\r\n  fetchResponseType: FetchResponseType;\r\n  fetchResponseDataType: FetchResponseDataType;\r\n  data: any;\r\n}\r\n","export enum IJoinType {\r\n  INNER_JOIN,\r\n  LEFT_JOIN,\r\n  RIGHT_JOIN,\r\n  LEFT_OUTER_JOIN,\r\n  RIGHT_OUTER_JOIN,\r\n  FULL_JOIN\r\n}\r\n\r\nexport interface ISqlJoin {\r\n  joinType: IJoinType;\r\n  dependentAlias: string;\r\n  relationName: string;\r\n  alias: string;\r\n}\r\n\r\nexport class SqlJoin implements ISqlJoin {\r\n  constructor(\r\n    public joinType: IJoinType,\r\n    public dependentAlias: string,\r\n    public relationName: string,\r\n    public alias: string\r\n  ) {}\r\n}\r\n\r\nexport interface IParameter {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport class Parameter implements IParameter {\r\n  constructor(\r\n    public name: string,\r\n    public value: string\r\n  ) {}\r\n}\r\n\r\nexport interface IFetchDefinition {\r\n  key: string;\r\n  domain: string;\r\n}\r\n\r\nexport interface ISqlFetchDefinition extends IFetchDefinition {\r\n  columns: string[];\r\n  condition: string;\r\n  joins: ISqlJoin[];\r\n  orderBy: string;\r\n  alias: string;\r\n  parameters: IParameter[];\r\n}\r\n\r\nexport class FetchDefinition implements IFetchDefinition {\r\n  public key: string;\r\n  public domain: string;\r\n  constructor(\r\n  ) {}\r\n}\r\n\r\nexport class SqlFetchDefinition extends FetchDefinition implements ISqlFetchDefinition {\r\n  public columns: string[];\r\n  public condition: string;\r\n  public joins: ISqlJoin[];\r\n  public orderBy: string;\r\n  public alias: string;\r\n  public parameters: IParameter[];\r\n  constructor() { super(); }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport const authorities = {\r\n  ROLE_USER: 'ROLE_USER',\r\n  ROLE_ADMIN: 'ROLE_ADMIN',\r\n  ROLE_SYSTEM_ADMIN: 'ROLE_SYSTEM_ADMIN',\r\n  ROLE_SETTINGS_ADMIN: 'ROLE_SETTINGS_ADMIN',\r\n  ROLE_USER_ADMIN: 'ROLE_USER_ADMIN'\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthoritiesConstants {\r\n\r\n  allAdmin(): string[] {\r\n    return [...this.superAdmin(), authorities.ROLE_SETTINGS_ADMIN, authorities.ROLE_USER_ADMIN];\r\n  }\r\n\r\n  superAdmin(): string[] {\r\n    return [authorities.ROLE_ADMIN, authorities.ROLE_SYSTEM_ADMIN];\r\n  }\r\n\r\n  settingAdmin(): string[] {\r\n    return [...this.superAdmin(), authorities.ROLE_SETTINGS_ADMIN];\r\n  }\r\n\r\n  userAdmin(): string[] {\r\n    return [...this.superAdmin(), authorities.ROLE_USER_ADMIN];\r\n  }\r\n}\r\n","import {HttpParams} from '@angular/common/http';\r\n\r\nexport const createRequestOption = (req?: any): HttpParams => {\r\n  let options: HttpParams = new HttpParams();\r\n  if (req) {\r\n    Object.keys(req).forEach(key => {\r\n      if (key !== 'sort') {\r\n        options = options.set(key, req[key]);\r\n      }\r\n    });\r\n    if (req.sort) {\r\n      req.sort.forEach(val => {\r\n        options = options.append('sort', val);\r\n      });\r\n    }\r\n  }\r\n  return options;\r\n};\r\n","export const commonResource = {\r\n  HOST_URL: 'http://localhost:8788',\r\n  CONTEXT: '/api/bend-main-app',\r\n  FICKET_CONTEXT: '/api/bend-ficket-app'\r\n};\r\n\r\nexport const BendCoreConstants = {\r\n  production: true,\r\n  API_URL: commonResource.HOST_URL + commonResource.CONTEXT,\r\n  DEBUG_ENABLE : true,\r\n  cookies: {\r\n    ACCOUNT_INFO: 'ACCOUNT_INFO',\r\n    TOKEN: 'TOKEN',\r\n    AUTHENTICATION_STATE: 'AUTHENTICATION_STATE',\r\n    AUTHORITIES: 'AUTHORITIES',\r\n    lifetime: {\r\n      TOKEN_LIFETIME: 3600000,\r\n      TOKEN_LIFETIME_FOR_REMEMBER_ME: 7200000\r\n    },\r\n    TOKEN_LIFETIME: 'TOKEN_LIFETIME',\r\n    routingDatabase: {\r\n      REGISTRY_TYPE: 'REGISTRY_TYPE',\r\n      REGISTRY_VALUE: 'REGISTRY_VALUE',\r\n      detectionTypes: {\r\n        CLUSTER_KEY: 'CLUSTER_KEY',\r\n        LOCALE_KEY: 'LOCALE_KEY'\r\n      }\r\n    },\r\n    lang: {\r\n      DEFAULT_LANG_KEY: 'DEF-LANG-KEY',\r\n      USE_LANG_KEY: 'USE-LANG-KEY'\r\n    }\r\n  },\r\n  jwt: {\r\n    JSON_WEB_TOKEN: 'Json-Web-Token',\r\n    REFRESHED_JSON_WEB_TOKEN: 'Refreshed-Json-Web-Token'\r\n  },\r\n  neighbourBaseUrls: {\r\n    BEND_MAIN_APP: commonResource.HOST_URL + commonResource.CONTEXT,\r\n    BEND_FICKET_APP: commonResource.HOST_URL + commonResource.FICKET_CONTEXT\r\n  }\r\n};\r\n","import {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {BaseCrudData, BaseCrudViewData} from '../model/crud/base-crud.data';\r\nimport {BaseData} from '../model/base-data';\r\nimport {BendResponse} from '../model/crud/response/bend-response.model';\r\nimport {DataResponse, PageableDataResponse} from '../model/crud/response/data-response.model';\r\nimport {Page} from '../model/crud/page-request.data';\r\nimport {createRequestOption} from './util/create-request-option.util';\r\nimport {BaseFlexibleCrudViewData} from '../model/crud/base-flexible-crud.data';\r\nimport {BendCoreConstants} from '../environments/bend-core-constants';\r\n\r\nexport abstract class AbstractBaseService {\r\n  protected PRIVATE_URL: string;\r\n  protected PRIVATE_ADMIN_URL: string;\r\n  protected PUBLIC_URL: string;\r\n  protected ACTUAL_URL: string;\r\n  protected DEFAULT_URL: string;\r\n\r\n  protected constructor(\r\n    private readonly BASE_URL: string,\r\n    protected http: HttpClient,\r\n    private readonly BASE_API_URL?: string\r\n  ) {\r\n    if (this.BASE_API_URL == null || this.BASE_API_URL.length < 1) {\r\n      this.BASE_API_URL = BendCoreConstants.API_URL;\r\n    }\r\n    this.PRIVATE_URL = this.BASE_API_URL + '/private' + this.BASE_URL;\r\n    this.PRIVATE_ADMIN_URL = this.BASE_API_URL + '/private/admin' + this.BASE_URL;\r\n    this.PUBLIC_URL = this.BASE_API_URL + '/public' + this.BASE_URL;\r\n    this.ACTUAL_URL = this.BASE_API_URL + this.BASE_URL;\r\n    this.DEFAULT_URL = this.PRIVATE_URL;\r\n  }\r\n}\r\n\r\nexport class BaseService<R extends BaseCrudData, Domain extends BaseData> extends AbstractBaseService {\r\n  constructor(\r\n    BASE_URL: string,\r\n    http: HttpClient,\r\n    BASE_API_URL: string = BendCoreConstants.API_URL\r\n  ) {super(BASE_URL, http, BASE_API_URL); }\r\n\r\n  public save(baseData: Domain): Observable<HttpResponse<BendResponse>> {\r\n    return this.http.post<BendResponse>(this.DEFAULT_URL, baseData, {observe: 'response'});\r\n  }\r\n\r\n  public update(baseData: Domain): Observable<HttpResponse<BendResponse>> {\r\n    return this.http.put<BendResponse>(this.DEFAULT_URL, baseData, {observe: 'response'});\r\n  }\r\n\r\n  public fetchAll(page?: Page): Observable<HttpResponse<PageableDataResponse<BaseCrudViewData[]>>> {\r\n    const options = createRequestOption(page);\r\n    return this.http.get<PageableDataResponse<BaseCrudViewData[]>>(this.DEFAULT_URL, {params: options, observe: 'response'});\r\n  }\r\n\r\n  public fetchAllFlexible(page?: Page): Observable<HttpResponse<DataResponse<BaseFlexibleCrudViewData>>> {\r\n    const options = createRequestOption(page);\r\n    return this.http.get<DataResponse<BaseFlexibleCrudViewData>>(`${this.DEFAULT_URL}/flexible`, {params: options, observe: 'response'});\r\n  }\r\n\r\n  public delete(id: number): Observable<HttpResponse<BendResponse>> {\r\n    return this.http.delete<BendResponse>(`${this.DEFAULT_URL}/${id}`, {observe: 'response'});\r\n  }\r\n\r\n  public findOne(id: number | string): Observable<HttpResponse<DataResponse<R>>> {\r\n    return this.http.get<DataResponse<R>>( `${this.DEFAULT_URL}/${id}`, {observe: 'response'});\r\n  }\r\n}\r\n\r\nexport class BaseFetchService<I, O> extends AbstractBaseService {\r\n  constructor(\r\n    BASE_URL: string,\r\n    http: HttpClient,\r\n    BASE_API_URL?: string\r\n  ) { super(BASE_URL, http, BASE_API_URL); }\r\n\r\n  fetch(inputs: I[]): Observable<HttpResponse<Map<string, O>>> {\r\n    return this.http.post<Map<string, O>>(this.DEFAULT_URL, inputs, {observe: 'response'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AccountInfo, LoginInfo} from '../../model/account.model';\r\nimport {UserCrudData} from '../../model/user.data';\r\nimport {BaseService} from '../../service/base.service';\r\nimport {BendResponse} from '../../model/crud/response/bend-response.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BendAccountService extends BaseService<UserCrudData, UserCrudData> {\r\n    constructor(\r\n      http: HttpClient\r\n    ) {\r\n      super('/account', http);\r\n    }\r\n\r\n    /*Cause Here we need to request on public url*/\r\n    save(user: UserCrudData): Observable<HttpResponse<BendResponse>> {\r\n      return this.http.post<BendResponse>(this.PUBLIC_URL, user, {observe: 'response'});\r\n    }\r\n\r\n    login(info: LoginInfo): Observable<HttpResponse<AccountInfo>> {\r\n        return this.http.post<AccountInfo>(this.PUBLIC_URL + '/login', info, { observe: 'response' });\r\n    }\r\n\r\n    accountInfo(): Observable<HttpResponse<AccountInfo>> {\r\n      return this.http.get<AccountInfo>( this.PRIVATE_URL + '/current-account', {observe: 'response'});\r\n    }\r\n}\r\n","export const httpStatus = {\r\n  CONTINUE: 100,\r\n  SWITCHING_PROTOCOLS: 101,\r\n  PROCESSING: 102,\r\n  CHECKPOINT: 103,\r\n  OK: 200,\r\n  CREATED: 201,\r\n  ACCEPTED: 202,\r\n  NON_AUTHORITATIVE_INFORMATION: 203,\r\n  NO_CONTENT: 204,\r\n  RESET_CONTENT: 205,\r\n  PARTIAL_CONTENT: 206,\r\n  MULTI_STATUS: 207,\r\n  ALREADY_REPORTED: 208,\r\n  IM_USED: 226,\r\n  MULTIPLE_CHOICES: 300,\r\n  MOVED_PERMANENTLY: 301,\r\n  FOUND: 302,\r\n  MOVED_TEMPORARILY: 302,\r\n  SEE_OTHER: 303,\r\n  NOT_MODIFIED: 304,\r\n  USE_PROXY: 305,\r\n  TEMPORARY_REDIRECT: 307,\r\n  PERMANENT_REDIRECT: 308,\r\n  BAD_REQUEST: 400,\r\n  UNAUTHORIZED: 401,\r\n  PAYMENT_REQUIRED: 402,\r\n  FORBIDDEN: 403,\r\n  NOT_FOUND: 404,\r\n  METHOD_NOT_ALLOWED: 405,\r\n  NOT_ACCEPTABLE: 406,\r\n  PROXY_AUTHENTICATION_REQUIRED: 407,\r\n  REQUEST_TIMEOUT: 408,\r\n  CONFLICT: 409,\r\n  GONE: 410,\r\n  LENGTH_REQUIRED: 411,\r\n  PRECONDITION_FAILED: 412,\r\n  PAYLOAD_TOO_LARGE: 413,\r\n  REQUEST_ENTITY_TOO_LARGE: 413,\r\n  URI_TOO_LONG: 414,\r\n  REQUEST_URI_TOO_LONG: 414,\r\n  UNSUPPORTED_MEDIA_TYPE: 415,\r\n  REQUESTED_RANGE_NOT_SATISFIABLE: 416,\r\n  EXPECTATION_FAILED: 417,\r\n  I_AM_A_TEAPOT: 418,\r\n  INSUFFICIENT_SPACE_ON_RESOURCE: 419,\r\n  METHOD_FAILURE: 420,\r\n  DESTINATION_LOCKED: 421,\r\n  UNPROCESSABLE_ENTITY: 422,\r\n  LOCKED: 423,\r\n  FAILED_DEPENDENCY: 424,\r\n  UPGRADE_REQUIRED: 426,\r\n  PRECONDITION_REQUIRED: 428,\r\n  TOO_MANY_REQUESTS: 429,\r\n  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\r\n  UNAVAILABLE_FOR_LEGAL_REASONS: 451,\r\n  INTERNAL_SERVER_ERROR: 500,\r\n  NOT_IMPLEMENTED: 501,\r\n  BAD_GATEWAY: 502,\r\n  SERVICE_UNAVAILABLE: 503,\r\n  GATEWAY_TIMEOUT: 504,\r\n  HTTP_VERSION_NOT_SUPPORTED: 505,\r\n  VARIANT_ALSO_NEGOTIATES: 506,\r\n  INSUFFICIENT_STORAGE: 507,\r\n  LOOP_DETECTED: 508,\r\n  BANDWIDTH_LIMIT_EXCEEDED: 509,\r\n  NOT_EXTENDED: 510,\r\n  NETWORK_AUTHENTICATION_REQUIRED: 511\r\n};\r\n","import {Observable, Subject} from 'rxjs';\r\nimport {BendAccountService} from './bend-account.service';\r\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\nimport {ConsoleService} from '../../service/console/console.service';\r\nimport {AccountInfo, LoginInfo, LogoutInfo} from '../../model/account.model';\r\nimport {httpStatus} from '../http/http-status';\r\nimport {BendCoreConstants} from '../../environments/bend-core-constants';\r\nimport {StorageService} from '../../service/storage/storage-service';\r\n\r\nexport interface IAuthenticationCallback {\r\n  authenticationState(isAuthenticated: boolean, message?: string, error?: HttpErrorResponse): void;\r\n}\r\n\r\nexport class ConsoleAuthenticationCallback implements IAuthenticationCallback {\r\n  constructor(\r\n    private consoleService: ConsoleService\r\n  ) {\r\n  }\r\n  authenticationState(isAuthenticated: boolean, message?: string, error?: HttpErrorResponse): void {\r\n    if (error == null) {\r\n      this.consoleService.message(message);\r\n    } else {\r\n      this.consoleService.error(message, error);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface IAbstractAuthenticationService {\r\n  authenticate(info: LoginInfo, callback?: IAuthenticationCallback);\r\n\r\n  refreshToken(token: string);\r\n\r\n  retrieveAccountInfo(): Observable<AccountInfo>;\r\n\r\n  isAuthenticated(): boolean;\r\n\r\n  currentToken(): string;\r\n\r\n  authorities(): string[];\r\n\r\n  getAuthenticationState(): Observable<AccountInfo>;\r\n\r\n  logout(info: LogoutInfo);\r\n\r\n  hasAnyAuthority(authorities: string[]): boolean;\r\n}\r\n\r\nexport abstract class AbstractAuthenticationService implements IAbstractAuthenticationService {\r\n  protected accountInfo: AccountInfo;\r\n  protected authenticationState = new Subject<AccountInfo>();\r\n  SUCCESS_MESSAGE = 'Authenticated Successfully';\r\n  FAILURE_MESSAGE = 'Error Occurred During Authentication';\r\n\r\n  constructor(\r\n    private accountService: BendAccountService,\r\n    private consoleService: ConsoleService,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  authenticate(info: LoginInfo, callback: IAuthenticationCallback) {\r\n    if (callback == null) {\r\n      callback = new ConsoleAuthenticationCallback(this.consoleService);\r\n    }\r\n    this.accountService.login(info)\r\n      .subscribe((res: HttpResponse<AccountInfo>) => {\r\n        if (res.status === httpStatus.OK) {\r\n          this.accountInfo = res.body;\r\n          if (this.accountInfo != null && this.accountInfo.authenticated ) {\r\n            this.saveToCookie(this.accountInfo);\r\n            this.authenticationState.next(this.accountInfo);\r\n            callback.authenticationState(true, this.SUCCESS_MESSAGE);\r\n          } else {\r\n            this.authenticationState.next(null);\r\n            callback.authenticationState(false, this.FAILURE_MESSAGE);\r\n          }\r\n        } else {\r\n          this.authenticationState.next(null);\r\n          callback.authenticationState(false, this.FAILURE_MESSAGE);\r\n        }\r\n        } , (res: HttpErrorResponse) => {\r\n          this.deleteCookie();\r\n          this.authenticationState.next(null);\r\n          callback.authenticationState(false, this.FAILURE_MESSAGE);\r\n        }\r\n      );\r\n  }\r\n\r\n  protected saveToCookie(accountInfo: AccountInfo) {\r\n    this.saveCookieByKey(BendCoreConstants.cookies.AUTHENTICATION_STATE, JSON.stringify(accountInfo.authenticated));\r\n    this.saveCookieByKey(BendCoreConstants.cookies.TOKEN, accountInfo.token);\r\n    this.saveCookieByKey(BendCoreConstants.cookies.AUTHORITIES, JSON.stringify(accountInfo.authorities));\r\n    accountInfo.token = null;\r\n    accountInfo.authorities = [];\r\n    this.saveCookieByKey(BendCoreConstants.cookies.ACCOUNT_INFO, JSON.stringify(accountInfo));\r\n  }\r\n\r\n  refreshToken(token: string) {\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.TOKEN);\r\n    this.saveCookieByKey(BendCoreConstants.cookies.TOKEN, token);\r\n  }\r\n\r\n  retrieveAccountInfo(): Observable<AccountInfo> {\r\n    const cookie = this.retrieveCookieByKey(BendCoreConstants.cookies.ACCOUNT_INFO);\r\n    if (cookie == null || cookie.length < 1) {\r\n      this.accountService.accountInfo().subscribe((resp: HttpResponse<AccountInfo>) => {\r\n        if (resp.status === httpStatus.OK) {\r\n          const accInfo = resp.body;\r\n          this.saveToCookie(accInfo);\r\n          const sub = new Subject();\r\n          sub.next(accInfo);\r\n          return sub.asObservable();\r\n        } else {\r\n          this.consoleService.error('No Account Info Found');\r\n        }\r\n      }, (err: HttpErrorResponse) => {\r\n        this.consoleService.error('Error Occurred During Account Fetch', err);\r\n      });\r\n    }\r\n    this.accountInfo = JSON.parse(cookie );\r\n    const subject = new Subject();\r\n    subject.next(this.accountInfo);\r\n    return subject.asObservable();\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const cookie = this.retrieveCookieByKey(BendCoreConstants.cookies.AUTHENTICATION_STATE);\r\n    if (cookie == null || cookie.length < 1 ) { return false; }\r\n    return JSON.parse(cookie);\r\n  }\r\n\r\n  currentToken(): string {\r\n    return this.retrieveCookieByKey(BendCoreConstants.cookies.TOKEN);\r\n  }\r\n\r\n  authorities(): string[] {\r\n    const authorities = this.retrieveCookieByKey(BendCoreConstants.cookies.AUTHORITIES);\r\n    if (authorities == null || authorities.length < 1) { return []; }\r\n    return JSON.parse(authorities);\r\n  }\r\n\r\n  getAuthenticationState(): Observable<AccountInfo> {\r\n    return this.authenticationState.asObservable();\r\n  }\r\n\r\n  protected deleteCookie() {\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.TOKEN);\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.AUTHORITIES);\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.ACCOUNT_INFO);\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.AUTHENTICATION_STATE);\r\n  }\r\n\r\n  logout(info: LogoutInfo) {\r\n    this.deleteCookie();\r\n    this.authenticationState.next(null);\r\n    this.consoleService.message('Logout Success of User' + info.logoutRule);\r\n  }\r\n\r\n  hasAnyAuthority(authorities: string[]): boolean {\r\n    const grantedAuthorities: string[] = this.authorities();\r\n    for (const auth of authorities) {\r\n      if (grantedAuthorities.includes(auth)) { return true; }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  protected deleteCookieByKey(key: string) {\r\n    this.storageService.remove(key);\r\n  }\r\n\r\n  protected saveCookieByKey(key: string, value: string) {\r\n    this.storageService.put(key, value);\r\n  }\r\n\r\n  protected retrieveCookieByKey(key: string): string {\r\n    return this.storageService.get(key);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport {Router} from '@angular/router';\r\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\n\r\nexport enum LogLevel {\r\n  CONSOLE,\r\n  TOAST,\r\n  MESSAGE\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ConsoleService {\r\n  constructor(\r\n    private location: Location,\r\n    private route: Router\r\n  ) {\r\n  }\r\n\r\n  message(message: string, logLevel: LogLevel = LogLevel.CONSOLE): ConsoleService {\r\n    switch (logLevel) {\r\n      case LogLevel.CONSOLE:\r\n        console.log(message);\r\n        return this;\r\n      default:\r\n        console.log(message);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  successBodyPrint(body: any): ConsoleService {\r\n    console.log(body);\r\n    return this;\r\n  }\r\n\r\n  log(message: string, body: HttpResponse<any>): ConsoleService {\r\n    console.log(message);\r\n    return this;\r\n  }\r\n\r\n  error(errMessage: string, error?: HttpErrorResponse): ConsoleService {\r\n    console.error(errMessage);\r\n    if (error) {\r\n      console.error('Error Occurred:' + error.error.message);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  backStack() {\r\n    this.location.back();\r\n  }\r\n\r\n  goTo(url: string[]) {\r\n    this.route.navigate(url);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StorageService {\r\n\r\n  put(key: string, value: string): StorageService {\r\n    localStorage.setItem(key, value);\r\n    return this;\r\n  }\r\n\r\n  removeAll(): StorageService {\r\n    localStorage.clear();\r\n    return this;\r\n  }\r\n\r\n  get(key: string, valueIfMissing?: string): string {\r\n    const value = localStorage.getItem(key);\r\n    if (value === undefined || value === null) return  valueIfMissing;\r\n    return value;\r\n  }\r\n\r\n  remove(key: string): StorageService {\r\n    localStorage.removeItem(key);\r\n    return this;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BendAccountService} from './bend-account.service';\r\nimport {AbstractAuthenticationService} from './abstract-authentication-service';\r\nimport {ConsoleService} from '../../service/console/console.service';\r\nimport {StorageService} from '../../service/storage/storage-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BendAuthenticationService extends AbstractAuthenticationService {\r\n  constructor(\r\n    accountService: BendAccountService,\r\n    consoleService: ConsoleService,\r\n    storageService: StorageService\r\n  ) {\r\n    super(accountService, consoleService, storageService);\r\n  }\r\n}\r\n","import {Injectable, isDevMode} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {BendAuthenticationService} from '../auth/bend-authentication-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RouterActivateInterceptor implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: BendAuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Promise<boolean> {\r\n    const authorities = route.data.authorities;\r\n    if (authorities == null || authorities.length <= 0 ) {\r\n      return Promise.resolve(\r\n        this.authenticationService.isAuthenticated()\r\n      );\r\n    } else {\r\n      return this.checkLogin(authorities, state.url);\r\n    }\r\n  }\r\n\r\n  checkLogin(authorities: string[], url: string): Promise<boolean> {\r\n    return Promise.resolve(\r\n      this.checkInternally(authorities, url)\r\n    );\r\n  }\r\n\r\n  private checkInternally(authorities: string[], url: string): boolean {\r\n    const authorize = this.authenticationService.hasAnyAuthority(authorities);\r\n    if (!authorize) {\r\n      if (isDevMode()) {\r\n        console.error('User doesn\\'t have any of required authorities: ' + authorities);\r\n      } else {\r\n        this.router.navigate(['accessdenied']);\r\n      }\r\n    }\r\n    return authorize;\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {tap} from 'rxjs/operators';\r\nimport {BendAuthenticationService} from '../../auth/bend-authentication-service';\r\nimport {BendCoreConstants} from '../../../environments/bend-core-constants';\r\n\r\n@Injectable()\r\nexport class RequestTokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authenticationService: BendAuthenticationService\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.authenticationService.isAuthenticated()) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this.authenticationService.currentToken()}`\r\n        }\r\n      });\r\n    }\r\n    return next.handle(req).pipe(tap(evt => {\r\n      if (evt instanceof HttpResponse) {\r\n        const JWT_TOKEN = evt.headers.get(BendCoreConstants.jwt.REFRESHED_JSON_WEB_TOKEN);\r\n        if (JWT_TOKEN != null) {\r\n          this.authenticationService.refreshToken(JWT_TOKEN);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {BendAuthenticationService} from '../auth/bend-authentication-service';\r\n\r\n\r\n/*If Passed Empty or YES Tag that means it check for authenticated*/\r\n/*If Passed NO Tag that means it check for not authenticated*/\r\n/*ALL OTHER TAG ARE MENTIONED AS YES TAG*/\r\n\r\n@Directive({\r\n  selector: '[bendIsAuthenticated]'\r\n})\r\nexport class BendIsAuthenticatedDirective {\r\n  constructor(private templateRef: TemplateRef<any>,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private authenticationService: BendAuthenticationService\r\n  ) {\r\n  }\r\n\r\n  @Input()\r\n  set bendIsAuthenticated(value: string) {\r\n    this.updateView(value);\r\n    this.authenticationService.getAuthenticationState().subscribe(info => this.updateView(value));\r\n  }\r\n\r\n  private updateView(value: string): void {\r\n    this.viewContainerRef.clear();\r\n    if (this.isAuthenticatedCheck(value) ) { this.viewContainerRef.createEmbeddedView(this.templateRef); }\r\n  }\r\n\r\n  private isAuthenticatedCheck(value: string): boolean {\r\n    const out = this.authenticationService.isAuthenticated();\r\n    return value.toLowerCase() === 'no' ? !out : out;\r\n  }\r\n\r\n}\r\n","import {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {BendAuthenticationService} from '../auth/bend-authentication-service';\r\n\r\n@Directive({\r\n  selector: '[bendHasAnyAuthority]'\r\n})\r\nexport class BendHasAnyAuthorityDirective {\r\n  private authorities: string[];\r\n\r\n  constructor(private templateRef: TemplateRef<any>,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private authenticationService: BendAuthenticationService\r\n  ) {\r\n  }\r\n\r\n  @Input()\r\n  set bendHasAnyAuthority(value: string | string[]) {\r\n    this.authorities = typeof value === 'string' ? [value] : value;\r\n    this.updateView();\r\n    this.authenticationService.getAuthenticationState().subscribe(info => this.updateView());\r\n  }\r\n\r\n  private updateView(): void {\r\n    this.viewContainerRef.clear();\r\n    if (this.hasAnyAuthorityCheck() ) { this.viewContainerRef.createEmbeddedView(this.templateRef); }\r\n  }\r\n\r\n  private hasAnyAuthorityCheck(): boolean {\r\n    if (!this.authenticationService.isAuthenticated()) {return false; }\r\n    return this.authenticationService.hasAnyAuthority(this.authorities);\r\n  }\r\n}\r\n","import {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AbstractBaseService} from './base.service';\r\nimport {FieldDefinition} from '../model/fetch/field-definition.model';\r\nimport {DataResponse} from '../model/crud/response/data-response.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppUtilService extends AbstractBaseService {\r\n  constructor(\r\n    http: HttpClient\r\n  ) {super('/app-util', http); }\r\n\r\n  checkExistence(table: string, field: string, value: string): Observable<HttpResponse<boolean>> {\r\n    return this.http.get<boolean>(this.PUBLIC_URL + `/single-field-existence-check/${table}/${field}/${value}`, { observe: 'response' });\r\n  }\r\n\r\n  updateAll(fields: FieldDefinition[]): Observable<HttpResponse<DataResponse<Map<string, object>>>> {\r\n    return this.http.post<DataResponse<Map<string, object>>>(this.PRIVATE_URL + `/field-edit`, fields, {observe: 'response'});\r\n  }\r\n}\r\n","import {BaseFetchService} from '../base.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {ISqlFetchDefinition} from '../../model/fetch/fetch-definition.model';\r\nimport {FetchResponse} from '../../model/fetch/fetch-response.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SqlFetchDefinitionService extends BaseFetchService<ISqlFetchDefinition, FetchResponse> {\r\n  constructor(\r\n    http: HttpClient\r\n  ) {\r\n    super('/sql-fetch', http);\r\n    this.DEFAULT_URL = this.PUBLIC_URL;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport interface ITextProcessingService {\r\n  camelCaseToSentence(text: string): string ;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TextProcessingService implements ITextProcessingService {\r\n\r\n  public camelCaseToSentence(text: string): string {\r\n    let preparedField = '';\r\n    let isSeparatorFound = false;\r\n    for (let i = 0; i < text.length; i++) {\r\n      const ch = text.charAt(i);\r\n      isSeparatorFound = this.checkSeparator(i, ch, text);\r\n      if (isSeparatorFound) {\r\n        if (i !== 0) preparedField += ' ';\r\n        preparedField += ch.toUpperCase();\r\n      } else preparedField += ch;\r\n\r\n      isSeparatorFound = false;\r\n    }\r\n\r\n    return preparedField;\r\n  }\r\n\r\n  public checkSeparator(indexOfChar: number, currentChar: string, text: string): boolean {\r\n    if (this.isUpperCase(currentChar))\r\n      return true;\r\n\r\n    return indexOfChar === 0;\r\n  }\r\n\r\n  public isUpperCase(currentChar: string): boolean {\r\n    return currentChar >= 'A' && currentChar <= 'Z';\r\n  }\r\n\r\n  public isLowerCase(currentChar: string): boolean {\r\n    return currentChar >= 'a' && currentChar <= 'z';\r\n  }\r\n}\r\n","import {\r\n  FlexibleDataTypes,\r\n  FlexibleIndex,\r\n  FlexibleRuleNameTexts, FlexibleRulePolicyTexts\r\n} from '../model/crud/base-flexible-crud.data';\r\nimport {Injectable} from '@angular/core';\r\n\r\nexport abstract class AbstractBendFlexibleCompilerService {\r\n  AND_SEPARATOR = ' - ';\r\n  private GLOBAL_DEFAULT_VALUE = 'N/A';\r\n\r\n  compile(index: FlexibleIndex, values: any[]): any {\r\n    if (!index.dynamic) {\r\n      return values[index.index];\r\n    } else {\r\n      if (index.flexibleRule.name === FlexibleRuleNameTexts.AND) {\r\n        return this.returnFromAnd(index, values);\r\n      } else if (index.flexibleRule.name === FlexibleRuleNameTexts.OR) {\r\n        return this.returnFromOr(index, values);\r\n      } else if (index.flexibleRule.name === FlexibleRuleNameTexts.BOOL) {\r\n        return this.returnFromBool(index, values);\r\n      }\r\n    }\r\n    return this.GLOBAL_DEFAULT_VALUE;\r\n  }\r\n\r\n  private valueByDataType(objValue: any, dataType: string): string {\r\n    if (objValue == null) {\r\n      return this.GLOBAL_DEFAULT_VALUE;\r\n    }\r\n    switch (dataType) {\r\n      case FlexibleDataTypes.STRING:\r\n        return objValue.toString();\r\n    }\r\n  }\r\n\r\n  protected returnFromAnd(index: FlexibleIndex, values: any[]): any {\r\n    let output = '';\r\n    for (const indexValue of index.flexibleRule.fromIndices) {\r\n      output += this.AND_SEPARATOR + this.valueByDataType(values[indexValue], index.flexibleRule.indicesDataTypes[indexValue]);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  protected returnFromOr(index: FlexibleIndex, values: any[]) {\r\n    switch (index.flexibleRule.rulePolicy.toString()) {\r\n      case FlexibleRulePolicyTexts.CHECKED_BY_NULL:\r\n        return this.basedOnNull(index, values);\r\n    }\r\n    return this.GLOBAL_DEFAULT_VALUE;\r\n  }\r\n\r\n  protected returnFromBool(index: FlexibleIndex, values: any[]): any {\r\n    const indexTop = index.flexibleRule.fromIndices[0];\r\n    if (String(values[indexTop]).toUpperCase() === 'TRUE') {\r\n      return this.valueByDataType(index.flexibleRule.referenceValues[0], this.getByIndex(index.flexibleRule.indicesDataTypes, 0));\r\n    } else {\r\n      return this.valueByDataType(index.flexibleRule.referenceValues[1], this.getByIndex(index.flexibleRule.indicesDataTypes, 1));\r\n    }\r\n  }\r\n\r\n  private getByIndex(indicesDataTypes: string[], index: number): string {\r\n    if (indicesDataTypes == null || indicesDataTypes.length <= index) {\r\n      return FlexibleDataTypes.STRING;\r\n    }\r\n    return indicesDataTypes[index];\r\n  }\r\n\r\n  private basedOnNull(index: FlexibleIndex, values: any[]): any {\r\n    for (const indexValue of index.flexibleRule.fromIndices) {\r\n      if (values[indexValue] != null) {\r\n        return this.valueByDataType(values[indexValue], this.getByIndex(index.flexibleRule.indicesDataTypes, indexValue));\r\n      }\r\n    }\r\n    return this.GLOBAL_DEFAULT_VALUE;\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BendFlexibleCompilerService extends AbstractBendFlexibleCompilerService {\r\n\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {StorageService} from '../../../service/storage/storage-service';\r\nimport {BendCoreConstants} from '../../../environments/bend-core-constants';\r\n\r\n@Injectable()\r\nexport class RoutingDatabaseInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const registryType = this.storageService.get(BendCoreConstants.cookies.routingDatabase.REGISTRY_TYPE);\r\n    const registryValue = this.storageService.get(BendCoreConstants.cookies.routingDatabase.REGISTRY_VALUE);\r\n    if (registryType != null && registryValue != null) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          HDR_RGTR_DTN_TP: registryType,\r\n          HDR_RGTR_DTN_VL: registryValue\r\n        }\r\n      });\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {CommonModule} from '@angular/common';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {BendHasAnyAuthorityDirective} from './security/directive/bend-has-any-authority.directive';\r\nimport {BendIsAuthenticatedDirective} from './security/directive/bend-is-authenticated.directive';\r\nimport {RequestTokenInterceptor} from './security/http/interceptor/request-token-interceptor';\r\nimport {RoutingDatabaseInterceptor} from './security/http/interceptor/routing-database-interceptor';\r\n\r\nconst DIRECTIVES = [BendHasAnyAuthorityDirective, BendIsAuthenticatedDirective];\r\n\r\n@NgModule({\r\n  declarations: [...DIRECTIVES],\r\n  imports: [CommonModule,\r\n    HttpClientModule, BrowserModule, FormsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: RequestTokenInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: RoutingDatabaseInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  exports: [...DIRECTIVES]\r\n})\r\nexport class BendCoreModule { }\r\n","/*\r\n * Public API Surface of bend-core\r\n */\r\n\r\nexport * from './lib/model/base-data';\r\nexport * from './lib/model/user.data';\r\nexport * from './lib/model/authority-crud.data';\r\nexport * from './lib/model/account.model';\r\n\r\nexport * from './lib/model/crud/base-crud.data';\r\nexport * from './lib/model/crud/base-flexible-crud.data';\r\nexport * from './lib/model/crud/page-request.data';\r\nexport * from './lib/model/crud/response/bend-status.enum';\r\nexport * from './lib/model/crud/response/bend-response.model';\r\nexport * from './lib/model/crud/response/data-response.model';\r\nexport * from './lib/model/crud/response/extra-response.model';\r\nexport * from './lib/model/crud/response/only-extra-response.model';\r\nexport * from './lib/model/fetch/field-definition.model';\r\nexport * from './lib/model/fetch/domain-description.model';\r\nexport * from './lib/model/fetch/field-description.model';\r\nexport * from './lib/model/fetch/fetch-response.model';\r\nexport * from './lib/model/fetch/fetch-definition.model';\r\n\r\nexport * from './lib/security/authorities-constants';\r\nexport * from './lib/security/auth/bend-account.service';\r\nexport * from './lib/security/auth/abstract-authentication-service';\r\nexport * from './lib/security/auth/bend-authentication-service';\r\n// export * from './lib/security/auth/bend-cookie-authentication-service';\r\nexport * from './lib/security/route/router-activate.interceptor';\r\nexport * from './lib/security/http/http-status';\r\nexport * from './lib/security/http/interceptor/request-token-interceptor';\r\nexport * from './lib/security/directive/bend-is-authenticated.directive';\r\nexport * from './lib/security/directive/bend-has-any-authority.directive';\r\n\r\n\r\nexport * from './lib/service/util/create-request-option.util';\r\nexport * from './lib/service/base.service';\r\nexport * from './lib/service/app-util-service';\r\nexport * from './lib/service/fetch/sql-fetch-definition.service';\r\nexport * from './lib/service/console/console.service';\r\nexport * from './lib/service/text/text-processing.service';\r\n\r\nexport * from './lib/compile/bend-flexible-compiler.service';\r\n\r\nexport * from './lib/bend-core.module';\r\nexport * from './lib/service/storage/storage-service';\r\nexport * from './lib/environments/bend-core-constants';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {RoutingDatabaseInterceptor as ɵa} from './lib/security/http/interceptor/routing-database-interceptor';"],"names":[],"mappings":"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"}