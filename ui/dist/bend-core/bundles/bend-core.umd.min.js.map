{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://bend-core/lib/model/account.model.ts","ng://bend-core/lib/model/base-data.ts","ng://bend-core/lib/model/crud/base-crud.data.ts","ng://bend-core/lib/model/user.data.ts","ng://bend-core/lib/model/authority-crud.data.ts","ng://bend-core/lib/model/crud/base-flexible-crud.data.ts","ng://bend-core/lib/model/crud/response/bend-status.enum.ts","ng://bend-core/lib/model/crud/page-request.data.ts","ng://bend-core/lib/model/fetch/fetch-response.model.ts","ng://bend-core/lib/model/crud/response/bend-response.model.ts","ng://bend-core/lib/model/crud/response/data-response.model.ts","ng://bend-core/lib/model/crud/response/extra-response.model.ts","ng://bend-core/lib/model/crud/response/only-extra-response.model.ts","ng://bend-core/lib/model/fetch/field-definition.model.ts","ng://bend-core/lib/model/fetch/domain-description.model.ts","ng://bend-core/lib/model/fetch/field-description.model.ts","ng://bend-core/lib/model/fetch/fetch-definition.model.ts","ng://bend-core/lib/service/console/console.service.ts","ng://bend-core/lib/security/authorities-constants.ts","ng://bend-core/lib/service/util/create-request-option.util.ts","ng://bend-core/lib/environments/bend-core-constants.ts","ng://bend-core/lib/service/base.service.ts","ng://bend-core/lib/security/auth/bend-account.service.ts","ng://bend-core/lib/security/http/http-status.ts","ng://bend-core/lib/security/auth/abstract-authentication-service.ts","ng://bend-core/lib/service/storage/storage-service.ts","ng://bend-core/lib/security/auth/bend-authentication-service.ts","ng://bend-core/lib/security/route/router-activate.interceptor.ts","ng://bend-core/lib/security/http/interceptor/request-token-interceptor.ts","ng://bend-core/lib/security/directive/bend-is-authenticated.directive.ts","ng://bend-core/lib/security/directive/bend-has-any-authority.directive.ts","ng://bend-core/lib/service/app-util-service.ts","ng://bend-core/lib/service/fetch/sql-fetch-definition.service.ts","ng://bend-core/lib/service/text/text-processing.service.ts","ng://bend-core/lib/compile/bend-flexible-compiler.service.ts","ng://bend-core/lib/security/http/interceptor/routing-database-interceptor.ts","ng://bend-core/lib/bend-core.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__values","o","s","Symbol","iterator","m","call","next","value","done","TypeError","__read","n","e","ar","push","error","__spread","concat","LogoutRule","BaseCrudData","_super","BaseData","BaseCrudViewData","UserCrudData","username","email","password","authorities","_this","AuthorityCrudData","authenticated","token","tokenLiveTime","FlexibleRulePolicy","BendStatus","FlexibleRulePolicyTexts","CHECKED_BY_NULL","CHECKED_BY_BOOLEAN","FlexibleRuleNameTexts","OR","AND","BOOL","FlexibleDataTypes","STRING","DATE","Page","page","size","defaultPage","FetchResponseType","FetchResponseDataType","DataResponse","BendResponse","PageableDataResponse","ExtraResponse","OnlyExtraResponse","FieldDefinition","DomainDescription","FieldDescription","IJoinType","LogLevel","joinType","dependentAlias","relationName","alias","name","SqlFetchDefinition","FetchDefinition","ROLE_USER","ROLE_ADMIN","ROLE_SYSTEM_ADMIN","ROLE_SETTINGS_ADMIN","ROLE_USER_ADMIN","AuthoritiesConstants","allAdmin","superAdmin","settingAdmin","userAdmin","Injectable","providedIn","createRequestOption","req","options","HttpParams","keys","forEach","set","sort","val","append","commonResource","HOST_URL","CONTEXT","FICKET_CONTEXT","BendCoreConstants","production","API_URL","DEBUG_ENABLE","cookies","ACCOUNT_INFO","TOKEN","AUTHENTICATION_STATE","AUTHORITIES","lifetime","TOKEN_LIFETIME","TOKEN_LIFETIME_FOR_REMEMBER_ME","routingDatabase","REGISTRY_TYPE","REGISTRY_VALUE","detectionTypes","CLUSTER_KEY","LOCALE_KEY","lang","DEFAULT_LANG_KEY","USE_LANG_KEY","jwt","JSON_WEB_TOKEN","REFRESHED_JSON_WEB_TOKEN","neighbourBaseUrls","BEND_MAIN_APP","BEND_FICKET_APP","BASE_URL","http","BASE_API_URL","PRIVATE_URL","PRIVATE_ADMIN_URL","PUBLIC_URL","ACTUAL_URL","DEFAULT_URL","BaseService","save","baseData","post","observe","update","put","fetchAll","get","params","fetchAllFlexible","delete","id","findOne","AbstractBaseService","BaseFetchService","fetch","inputs","BendAccountService","user","login","info","accountInfo","HttpClient","httpStatus","CONTINUE","SWITCHING_PROTOCOLS","PROCESSING","CHECKPOINT","OK","CREATED","ACCEPTED","NON_AUTHORITATIVE_INFORMATION","NO_CONTENT","RESET_CONTENT","PARTIAL_CONTENT","MULTI_STATUS","ALREADY_REPORTED","IM_USED","MULTIPLE_CHOICES","MOVED_PERMANENTLY","FOUND","MOVED_TEMPORARILY","SEE_OTHER","NOT_MODIFIED","USE_PROXY","TEMPORARY_REDIRECT","PERMANENT_REDIRECT","BAD_REQUEST","UNAUTHORIZED","PAYMENT_REQUIRED","FORBIDDEN","NOT_FOUND","METHOD_NOT_ALLOWED","NOT_ACCEPTABLE","PROXY_AUTHENTICATION_REQUIRED","REQUEST_TIMEOUT","CONFLICT","GONE","LENGTH_REQUIRED","PRECONDITION_FAILED","PAYLOAD_TOO_LARGE","REQUEST_ENTITY_TOO_LARGE","URI_TOO_LONG","REQUEST_URI_TOO_LONG","UNSUPPORTED_MEDIA_TYPE","REQUESTED_RANGE_NOT_SATISFIABLE","EXPECTATION_FAILED","I_AM_A_TEAPOT","INSUFFICIENT_SPACE_ON_RESOURCE","METHOD_FAILURE","DESTINATION_LOCKED","UNPROCESSABLE_ENTITY","LOCKED","FAILED_DEPENDENCY","UPGRADE_REQUIRED","PRECONDITION_REQUIRED","TOO_MANY_REQUESTS","REQUEST_HEADER_FIELDS_TOO_LARGE","UNAVAILABLE_FOR_LEGAL_REASONS","INTERNAL_SERVER_ERROR","NOT_IMPLEMENTED","BAD_GATEWAY","SERVICE_UNAVAILABLE","GATEWAY_TIMEOUT","HTTP_VERSION_NOT_SUPPORTED","VARIANT_ALSO_NEGOTIATES","INSUFFICIENT_STORAGE","LOOP_DETECTED","BANDWIDTH_LIMIT_EXCEEDED","NOT_EXTENDED","NETWORK_AUTHENTICATION_REQUIRED","ConsoleAuthenticationCallback","consoleService","authenticationState","isAuthenticated","message","AbstractAuthenticationService","accountService","storageService","Subject","SUCCESS_MESSAGE","FAILURE_MESSAGE","authenticate","callback","subscribe","res","status","body","saveToCookie","deleteCookie","saveCookieByKey","JSON","stringify","refreshToken","deleteCookieByKey","retrieveAccountInfo","cookie","retrieveCookieByKey","resp","accInfo","sub","asObservable","err","parse","subject","currentToken","getAuthenticationState","logout","logoutRule","hasAnyAuthority","grantedAuthorities","authorities_1","authorities_1_1","auth","includes","remove","ConsoleService","location","route","logLevel","CONSOLE","console","log","successBodyPrint","errMessage","backStack","back","goTo","url","navigate","Location","Router","StorageService","localStorage","setItem","removeAll","clear","valueIfMissing","getItem","removeItem","BendAuthenticationService","RouterActivateInterceptor","router","authenticationService","canActivate","state","data","Promise","resolve","checkLogin","checkInternally","authorize","isDevMode","RequestTokenInterceptor","intercept","clone","setHeaders","Authorization","handle","pipe","tap","evt","HttpResponse","JWT_TOKEN","headers","BendIsAuthenticatedDirective","templateRef","viewContainerRef","updateView","isAuthenticatedCheck","createEmbeddedView","out","toLowerCase","TemplateRef","ViewContainerRef","Input","Directive","selector","BendHasAnyAuthorityDirective","hasAnyAuthorityCheck","AppUtilService","checkExistence","table","field","updateAll","fields","SqlFetchDefinitionService","TextProcessingService","camelCaseToSentence","text","preparedField","ch","charAt","checkSeparator","toUpperCase","indexOfChar","currentChar","isUpperCase","isLowerCase","AbstractBendFlexibleCompilerService","AND_SEPARATOR","GLOBAL_DEFAULT_VALUE","compile","index","values","dynamic","flexibleRule","returnFromAnd","returnFromOr","returnFromBool","valueByDataType","objValue","dataType","toString","output","_b","fromIndices","_c","indexValue","indicesDataTypes","rulePolicy","basedOnNull","indexTop","String","referenceValues","getByIndex","BendFlexibleCompilerService","RoutingDatabaseInterceptor","registryType","registryValue","HDR_RGTR_DTN_TP","HDR_RGTR_DTN_VL","DIRECTIVES","BendCoreModule","NgModule","declarations","imports","CommonModule","HttpClientModule","BrowserModule","FormsModule","providers","provide","HTTP_INTERCEPTORS","useClass","multi","exports","SUCCESS","FAILURE"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class AccountInfo {\r\n  constructor(\r\n    public username?: string,\r\n    public authenticated?: boolean,\r\n    public authorities?: string[],\r\n    public token?: string,\r\n    public tokenLiveTime?: number\r\n  ) {\r\n  }\r\n}\r\n\r\nexport class LoginInfo {\r\n  username?: string;\r\n  rememberMe?: boolean;\r\n  password?: string;\r\n}\r\n\r\nexport enum LogoutRule {\r\n  ALL_SESSION,\r\n  CURRENT_SESSION,\r\n  RATHER_THAN_CURRENT_SESSION,\r\n  RATHER_THAN_CURRENT_IP,\r\n  CURRENT_IP\r\n}\r\n\r\nexport class LogoutInfo {\r\n  public token?: string;\r\n  public logoutRule?: LogoutRule;\r\n}\r\n","export class BaseData {\r\n  public id: number;\r\n  public active?: boolean;\r\n}\r\n","import {BaseData} from '../base-data';\r\n\r\nexport class BaseCrudData extends BaseData {\r\n  lastChangedDate: Date;\r\n  lastChangedBy: string;\r\n}\r\n\r\nexport class BaseCrudViewData extends BaseData {\r\n  primary: string;\r\n  secondary: string;\r\n}\r\n","import {AuthorityCrudData} from './authority-crud.data';\r\nimport {BaseCrudData} from './crud/base-crud.data';\r\n\r\nexport class UserCrudData extends BaseCrudData {\r\n  constructor(\r\n    public username?: string,\r\n    public email?: string,\r\n    public password?: string,\r\n    public authorities?: AuthorityCrudData[]\r\n  ) {\r\n    super();\r\n  }\r\n}\r\n","import {BaseCrudData} from './crud/base-crud.data';\r\n\r\nexport class AuthorityCrudData extends BaseCrudData {\r\n  public name: string;\r\n}\r\n","export class BaseFlexibleCrudViewData {\r\n  columns: string[];\r\n  values: string[][];\r\n  indexes: FlexibleIndex[];\r\n  idIndex: number;\r\n}\r\n\r\nexport class FlexibleIndex {\r\n  dynamic: boolean;\r\n  index: number;\r\n  datatype: string;\r\n  dataFormat: string;\r\n  flexibleRule: FlexibleRule;\r\n}\r\n\r\nexport class FlexibleRule {\r\n  name: string;\r\n  fromIndices: number[];\r\n  indicesDataTypes: string[];\r\n  referenceValues: string[];\r\n  rulePolicy: FlexibleRulePolicy;\r\n}\r\n\r\nexport enum FlexibleRulePolicy {\r\n  CHECKED_BY_NULL,\r\n  CHECKED_BY_BOOLEAN\r\n}\r\n\r\nexport const FlexibleRulePolicyTexts = {\r\n  CHECKED_BY_NULL: 'CHECKED_BY_NULL',\r\n  CHECKED_BY_BOOLEAN: 'CHECKED_BY_BOOLEAN'\r\n};\r\n\r\nexport const FlexibleRuleNameTexts = {\r\n  OR: 'OR',\r\n  AND: 'AND',\r\n  BOOL: 'BOOL'\r\n};\r\n\r\nexport const FlexibleDataTypes = {\r\n  STRING: 'STRING',\r\n  DATE: 'DATE'\r\n};\r\n","export enum BendStatus {\r\n  SUCCESS,\r\n  FAILURE,\r\n  FORBIDDEN\r\n}\r\n\r\nexport const BendStatusText = {\r\n  SUCCESS: 'SUCCESS',\r\n  FAILURE: 'FAILURE',\r\n  FORBIDDEN: 'FORBIDDEN'\r\n};\r\n","export class Page {\r\n  constructor(\r\n    public page?: number,\r\n    public size?: number\r\n  ) {\r\n  }\r\n\r\n  public static defaultPage(): Page {\r\n    return new Page(0, 20);\r\n  }\r\n}\r\n","\r\nexport enum FetchResponseType {\r\n  SINGLE, LIST, MAP\r\n}\r\n\r\nexport enum FetchResponseDataType {\r\n  NUMBER, STRING\r\n}\r\nexport class FetchResponse {\r\n  key: string;\r\n  fetchResponseType: FetchResponseType;\r\n  fetchResponseDataType: FetchResponseDataType;\r\n  data: any;\r\n}\r\n","import {BendStatus} from './bend-status.enum';\r\n\r\nexport class BendResponse {\r\n  public status: BendStatus;\r\n  public dataTypes: string[];\r\n}\r\n","import {BendResponse} from './bend-response.model';\r\n\r\nexport class DataResponse<DataType> extends BendResponse {\r\n  public data: DataType;\r\n}\r\n\r\nexport class PageableDataResponse<Data> extends DataResponse<Data> {\r\n  totalPages: number;\r\n  totalElements: number;\r\n}\r\n","import {DataResponse} from './data-response.model';\r\n\r\nexport class ExtraResponse<ExtraDataType, DataType> extends DataResponse<DataType> {\r\n  public extra: ExtraDataType;\r\n}\r\n","import {BendResponse} from './bend-response.model';\r\n\r\nexport class OnlyExtraResponse<ExtraDataType> extends BendResponse {\r\n  public extra: ExtraDataType;\r\n}\r\n","import {BaseData} from '../base-data';\r\n\r\nexport class FieldDefinition extends BaseData {\r\n  public domainName?: string;\r\n  public fieldName?: string;\r\n  public value?: string;\r\n}\r\n\r\n","import {BaseData} from '../base-data';\r\n\r\n\r\nexport class DomainDescription extends BaseData {\r\n  domainName?: string;\r\n  packageName?: string;\r\n  hasPermissionElExpression?: string;\r\n  superDomain?: DomainDescription;\r\n}\r\n","import {DomainDescription} from './domain-description.model';\r\nimport {BaseData} from '../base-data';\r\n\r\n\r\nexport class FieldDescription extends BaseData {\r\n  fieldName?: string;\r\n  fieldTitle?: string;\r\n  dataType?: string;\r\n  domainDescription?: DomainDescription;\r\n  hasPermissionElExpression?: string;\r\n}\r\n","export enum IJoinType {\r\n  INNER_JOIN,\r\n  LEFT_JOIN,\r\n  RIGHT_JOIN,\r\n  LEFT_OUTER_JOIN,\r\n  RIGHT_OUTER_JOIN,\r\n  FULL_JOIN\r\n}\r\n\r\nexport interface ISqlJoin {\r\n  joinType: IJoinType;\r\n  dependentAlias: string;\r\n  relationName: string;\r\n  alias: string;\r\n}\r\n\r\nexport class SqlJoin implements ISqlJoin {\r\n  constructor(\r\n    public joinType: IJoinType,\r\n    public dependentAlias: string,\r\n    public relationName: string,\r\n    public alias: string\r\n  ) {}\r\n}\r\n\r\nexport interface IParameter {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport class Parameter implements IParameter {\r\n  constructor(\r\n    public name: string,\r\n    public value: string\r\n  ) {}\r\n}\r\n\r\nexport interface IFetchDefinition {\r\n  key: string;\r\n  domain: string;\r\n}\r\n\r\nexport interface ISqlFetchDefinition extends IFetchDefinition {\r\n  columns: string[];\r\n  condition: string;\r\n  joins: ISqlJoin[];\r\n  orderBy: string;\r\n  alias: string;\r\n  parameters: IParameter[];\r\n}\r\n\r\nexport class FetchDefinition implements IFetchDefinition {\r\n  public key: string;\r\n  public domain: string;\r\n  constructor(\r\n  ) {}\r\n}\r\n\r\nexport class SqlFetchDefinition extends FetchDefinition implements ISqlFetchDefinition {\r\n  public columns: string[];\r\n  public condition: string;\r\n  public joins: ISqlJoin[];\r\n  public orderBy: string;\r\n  public alias: string;\r\n  public parameters: IParameter[];\r\n  constructor() { super(); }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport {Router} from '@angular/router';\r\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\n\r\nexport enum LogLevel {\r\n  CONSOLE,\r\n  TOAST,\r\n  MESSAGE\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ConsoleService {\r\n  constructor(\r\n    private location: Location,\r\n    private route: Router\r\n  ) {\r\n  }\r\n\r\n  message(message: string, logLevel: LogLevel = LogLevel.CONSOLE): ConsoleService {\r\n    switch (logLevel) {\r\n      case LogLevel.CONSOLE:\r\n        console.log(message);\r\n        return this;\r\n      default:\r\n        console.log(message);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  successBodyPrint(body: any): ConsoleService {\r\n    console.log(body);\r\n    return this;\r\n  }\r\n\r\n  log(message: string, body: HttpResponse<any>): ConsoleService {\r\n    console.log(message);\r\n    return this;\r\n  }\r\n\r\n  error(errMessage: string, error?: HttpErrorResponse): ConsoleService {\r\n    console.error(errMessage);\r\n    if (error) {\r\n      console.error('Error Occurred:' + error.error.message);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  backStack() {\r\n    this.location.back();\r\n  }\r\n\r\n  goTo(url: string[]) {\r\n    this.route.navigate(url);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport const authorities = {\r\n  ROLE_USER: 'ROLE_USER',\r\n  ROLE_ADMIN: 'ROLE_ADMIN',\r\n  ROLE_SYSTEM_ADMIN: 'ROLE_SYSTEM_ADMIN',\r\n  ROLE_SETTINGS_ADMIN: 'ROLE_SETTINGS_ADMIN',\r\n  ROLE_USER_ADMIN: 'ROLE_USER_ADMIN'\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthoritiesConstants {\r\n\r\n  allAdmin(): string[] {\r\n    return [...this.superAdmin(), authorities.ROLE_SETTINGS_ADMIN, authorities.ROLE_USER_ADMIN];\r\n  }\r\n\r\n  superAdmin(): string[] {\r\n    return [authorities.ROLE_ADMIN, authorities.ROLE_SYSTEM_ADMIN];\r\n  }\r\n\r\n  settingAdmin(): string[] {\r\n    return [...this.superAdmin(), authorities.ROLE_SETTINGS_ADMIN];\r\n  }\r\n\r\n  userAdmin(): string[] {\r\n    return [...this.superAdmin(), authorities.ROLE_USER_ADMIN];\r\n  }\r\n}\r\n","import {HttpParams} from '@angular/common/http';\r\n\r\nexport const createRequestOption = (req?: any): HttpParams => {\r\n  let options: HttpParams = new HttpParams();\r\n  if (req) {\r\n    Object.keys(req).forEach(key => {\r\n      if (key !== 'sort') {\r\n        options = options.set(key, req[key]);\r\n      }\r\n    });\r\n    if (req.sort) {\r\n      req.sort.forEach(val => {\r\n        options = options.append('sort', val);\r\n      });\r\n    }\r\n  }\r\n  return options;\r\n};\r\n","export const commonResource = {\r\n  HOST_URL: 'http://localhost:8788',\r\n  CONTEXT: '/api/bend-main-app',\r\n  FICKET_CONTEXT: '/api/bend-ficket-app'\r\n};\r\n\r\nexport const BendCoreConstants = {\r\n  production: true,\r\n  API_URL: commonResource.HOST_URL + commonResource.CONTEXT,\r\n  DEBUG_ENABLE : true,\r\n  cookies: {\r\n    ACCOUNT_INFO: 'ACCOUNT_INFO',\r\n    TOKEN: 'TOKEN',\r\n    AUTHENTICATION_STATE: 'AUTHENTICATION_STATE',\r\n    AUTHORITIES: 'AUTHORITIES',\r\n    lifetime: {\r\n      TOKEN_LIFETIME: 3600000,\r\n      TOKEN_LIFETIME_FOR_REMEMBER_ME: 7200000\r\n    },\r\n    TOKEN_LIFETIME: 'TOKEN_LIFETIME',\r\n    routingDatabase: {\r\n      REGISTRY_TYPE: 'REGISTRY_TYPE',\r\n      REGISTRY_VALUE: 'REGISTRY_VALUE',\r\n      detectionTypes: {\r\n        CLUSTER_KEY: 'CLUSTER_KEY',\r\n        LOCALE_KEY: 'LOCALE_KEY'\r\n      }\r\n    },\r\n    lang: {\r\n      DEFAULT_LANG_KEY: 'DEF-LANG-KEY',\r\n      USE_LANG_KEY: 'USE-LANG-KEY'\r\n    }\r\n  },\r\n  jwt: {\r\n    JSON_WEB_TOKEN: 'Json-Web-Token',\r\n    REFRESHED_JSON_WEB_TOKEN: 'Refreshed-Json-Web-Token'\r\n  },\r\n  neighbourBaseUrls: {\r\n    BEND_MAIN_APP: commonResource.HOST_URL + commonResource.CONTEXT,\r\n    BEND_FICKET_APP: commonResource.HOST_URL + commonResource.FICKET_CONTEXT\r\n  }\r\n};\r\n","import {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {BaseCrudData, BaseCrudViewData} from '../model/crud/base-crud.data';\r\nimport {BaseData} from '../model/base-data';\r\nimport {BendResponse} from '../model/crud/response/bend-response.model';\r\nimport {DataResponse, PageableDataResponse} from '../model/crud/response/data-response.model';\r\nimport {Page} from '../model/crud/page-request.data';\r\nimport {createRequestOption} from './util/create-request-option.util';\r\nimport {BaseFlexibleCrudViewData} from '../model/crud/base-flexible-crud.data';\r\nimport {BendCoreConstants} from '../environments/bend-core-constants';\r\n\r\nexport abstract class AbstractBaseService {\r\n  protected PRIVATE_URL: string;\r\n  protected PRIVATE_ADMIN_URL: string;\r\n  protected PUBLIC_URL: string;\r\n  protected ACTUAL_URL: string;\r\n  protected DEFAULT_URL: string;\r\n\r\n  protected constructor(\r\n    private readonly BASE_URL: string,\r\n    protected http: HttpClient,\r\n    private readonly BASE_API_URL?: string\r\n  ) {\r\n    if (this.BASE_API_URL == null || this.BASE_API_URL.length < 1) {\r\n      this.BASE_API_URL = BendCoreConstants.API_URL;\r\n    }\r\n    this.PRIVATE_URL = this.BASE_API_URL + '/private' + this.BASE_URL;\r\n    this.PRIVATE_ADMIN_URL = this.BASE_API_URL + '/private/admin' + this.BASE_URL;\r\n    this.PUBLIC_URL = this.BASE_API_URL + '/public' + this.BASE_URL;\r\n    this.ACTUAL_URL = this.BASE_API_URL + this.BASE_URL;\r\n    this.DEFAULT_URL = this.PRIVATE_URL;\r\n  }\r\n}\r\n\r\nexport class BaseService<R extends BaseCrudData, Domain extends BaseData> extends AbstractBaseService {\r\n  constructor(\r\n    BASE_URL: string,\r\n    http: HttpClient,\r\n    BASE_API_URL: string = BendCoreConstants.API_URL\r\n  ) {super(BASE_URL, http, BASE_API_URL); }\r\n\r\n  public save(baseData: Domain): Observable<HttpResponse<BendResponse>> {\r\n    return this.http.post<BendResponse>(this.DEFAULT_URL, baseData, {observe: 'response'});\r\n  }\r\n\r\n  public update(baseData: Domain): Observable<HttpResponse<BendResponse>> {\r\n    return this.http.put<BendResponse>(this.DEFAULT_URL, baseData, {observe: 'response'});\r\n  }\r\n\r\n  public fetchAll(page?: Page): Observable<HttpResponse<PageableDataResponse<BaseCrudViewData[]>>> {\r\n    const options = createRequestOption(page);\r\n    return this.http.get<PageableDataResponse<BaseCrudViewData[]>>(this.DEFAULT_URL, {params: options, observe: 'response'});\r\n  }\r\n\r\n  public fetchAllFlexible(page?: Page): Observable<HttpResponse<DataResponse<BaseFlexibleCrudViewData>>> {\r\n    const options = createRequestOption(page);\r\n    return this.http.get<DataResponse<BaseFlexibleCrudViewData>>(`${this.DEFAULT_URL}/flexible`, {params: options, observe: 'response'});\r\n  }\r\n\r\n  public delete(id: number): Observable<HttpResponse<BendResponse>> {\r\n    return this.http.delete<BendResponse>(`${this.DEFAULT_URL}/${id}`, {observe: 'response'});\r\n  }\r\n\r\n  public findOne(id: number | string): Observable<HttpResponse<DataResponse<R>>> {\r\n    return this.http.get<DataResponse<R>>( `${this.DEFAULT_URL}/${id}`, {observe: 'response'});\r\n  }\r\n}\r\n\r\nexport class BaseFetchService<I, O> extends AbstractBaseService {\r\n  constructor(\r\n    BASE_URL: string,\r\n    http: HttpClient,\r\n    BASE_API_URL?: string\r\n  ) { super(BASE_URL, http, BASE_API_URL); }\r\n\r\n  fetch(inputs: I[]): Observable<HttpResponse<Map<string, O>>> {\r\n    return this.http.post<Map<string, O>>(this.DEFAULT_URL, inputs, {observe: 'response'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {AccountInfo, LoginInfo} from '../../model/account.model';\r\nimport {UserCrudData} from '../../model/user.data';\r\nimport {BaseService} from '../../service/base.service';\r\nimport {BendResponse} from '../../model/crud/response/bend-response.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BendAccountService extends BaseService<UserCrudData, UserCrudData> {\r\n    constructor(\r\n      http: HttpClient\r\n    ) {\r\n      super('/account', http);\r\n    }\r\n\r\n    /*Cause Here we need to request on public url*/\r\n    save(user: UserCrudData): Observable<HttpResponse<BendResponse>> {\r\n      return this.http.post<BendResponse>(this.PUBLIC_URL, user, {observe: 'response'});\r\n    }\r\n\r\n    login(info: LoginInfo): Observable<HttpResponse<AccountInfo>> {\r\n        return this.http.post<AccountInfo>(this.PUBLIC_URL + '/login', info, { observe: 'response' });\r\n    }\r\n\r\n    accountInfo(): Observable<HttpResponse<AccountInfo>> {\r\n      return this.http.get<AccountInfo>( this.PRIVATE_URL + '/current-account', {observe: 'response'});\r\n    }\r\n}\r\n","export const httpStatus = {\r\n  CONTINUE: 100,\r\n  SWITCHING_PROTOCOLS: 101,\r\n  PROCESSING: 102,\r\n  CHECKPOINT: 103,\r\n  OK: 200,\r\n  CREATED: 201,\r\n  ACCEPTED: 202,\r\n  NON_AUTHORITATIVE_INFORMATION: 203,\r\n  NO_CONTENT: 204,\r\n  RESET_CONTENT: 205,\r\n  PARTIAL_CONTENT: 206,\r\n  MULTI_STATUS: 207,\r\n  ALREADY_REPORTED: 208,\r\n  IM_USED: 226,\r\n  MULTIPLE_CHOICES: 300,\r\n  MOVED_PERMANENTLY: 301,\r\n  FOUND: 302,\r\n  MOVED_TEMPORARILY: 302,\r\n  SEE_OTHER: 303,\r\n  NOT_MODIFIED: 304,\r\n  USE_PROXY: 305,\r\n  TEMPORARY_REDIRECT: 307,\r\n  PERMANENT_REDIRECT: 308,\r\n  BAD_REQUEST: 400,\r\n  UNAUTHORIZED: 401,\r\n  PAYMENT_REQUIRED: 402,\r\n  FORBIDDEN: 403,\r\n  NOT_FOUND: 404,\r\n  METHOD_NOT_ALLOWED: 405,\r\n  NOT_ACCEPTABLE: 406,\r\n  PROXY_AUTHENTICATION_REQUIRED: 407,\r\n  REQUEST_TIMEOUT: 408,\r\n  CONFLICT: 409,\r\n  GONE: 410,\r\n  LENGTH_REQUIRED: 411,\r\n  PRECONDITION_FAILED: 412,\r\n  PAYLOAD_TOO_LARGE: 413,\r\n  REQUEST_ENTITY_TOO_LARGE: 413,\r\n  URI_TOO_LONG: 414,\r\n  REQUEST_URI_TOO_LONG: 414,\r\n  UNSUPPORTED_MEDIA_TYPE: 415,\r\n  REQUESTED_RANGE_NOT_SATISFIABLE: 416,\r\n  EXPECTATION_FAILED: 417,\r\n  I_AM_A_TEAPOT: 418,\r\n  INSUFFICIENT_SPACE_ON_RESOURCE: 419,\r\n  METHOD_FAILURE: 420,\r\n  DESTINATION_LOCKED: 421,\r\n  UNPROCESSABLE_ENTITY: 422,\r\n  LOCKED: 423,\r\n  FAILED_DEPENDENCY: 424,\r\n  UPGRADE_REQUIRED: 426,\r\n  PRECONDITION_REQUIRED: 428,\r\n  TOO_MANY_REQUESTS: 429,\r\n  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\r\n  UNAVAILABLE_FOR_LEGAL_REASONS: 451,\r\n  INTERNAL_SERVER_ERROR: 500,\r\n  NOT_IMPLEMENTED: 501,\r\n  BAD_GATEWAY: 502,\r\n  SERVICE_UNAVAILABLE: 503,\r\n  GATEWAY_TIMEOUT: 504,\r\n  HTTP_VERSION_NOT_SUPPORTED: 505,\r\n  VARIANT_ALSO_NEGOTIATES: 506,\r\n  INSUFFICIENT_STORAGE: 507,\r\n  LOOP_DETECTED: 508,\r\n  BANDWIDTH_LIMIT_EXCEEDED: 509,\r\n  NOT_EXTENDED: 510,\r\n  NETWORK_AUTHENTICATION_REQUIRED: 511\r\n};\r\n","import {Observable, Subject} from 'rxjs';\r\nimport {BendAccountService} from './bend-account.service';\r\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\nimport {ConsoleService} from '../../service/console/console.service';\r\nimport {AccountInfo, LoginInfo, LogoutInfo} from '../../model/account.model';\r\nimport {httpStatus} from '../http/http-status';\r\nimport {BendCoreConstants} from '../../environments/bend-core-constants';\r\nimport {StorageService} from '../../service/storage/storage-service';\r\n\r\nexport interface IAuthenticationCallback {\r\n  authenticationState(isAuthenticated: boolean, message?: string, error?: HttpErrorResponse): void;\r\n}\r\n\r\nexport class ConsoleAuthenticationCallback implements IAuthenticationCallback {\r\n  constructor(\r\n    private consoleService: ConsoleService\r\n  ) {\r\n  }\r\n  authenticationState(isAuthenticated: boolean, message?: string, error?: HttpErrorResponse): void {\r\n    if (error == null) {\r\n      this.consoleService.message(message);\r\n    } else {\r\n      this.consoleService.error(message, error);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface IAbstractAuthenticationService {\r\n  authenticate(info: LoginInfo, callback?: IAuthenticationCallback);\r\n\r\n  refreshToken(token: string);\r\n\r\n  retrieveAccountInfo(): Observable<AccountInfo>;\r\n\r\n  isAuthenticated(): boolean;\r\n\r\n  currentToken(): string;\r\n\r\n  authorities(): string[];\r\n\r\n  getAuthenticationState(): Observable<AccountInfo>;\r\n\r\n  logout(info: LogoutInfo);\r\n\r\n  hasAnyAuthority(authorities: string[]): boolean;\r\n}\r\n\r\nexport abstract class AbstractAuthenticationService implements IAbstractAuthenticationService {\r\n  protected accountInfo: AccountInfo;\r\n  protected authenticationState = new Subject<AccountInfo>();\r\n  SUCCESS_MESSAGE = 'Authenticated Successfully';\r\n  FAILURE_MESSAGE = 'Error Occurred During Authentication';\r\n\r\n  constructor(\r\n    private accountService: BendAccountService,\r\n    private consoleService: ConsoleService,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  authenticate(info: LoginInfo, callback: IAuthenticationCallback) {\r\n    if (callback == null) {\r\n      callback = new ConsoleAuthenticationCallback(this.consoleService);\r\n    }\r\n    this.accountService.login(info)\r\n      .subscribe((res: HttpResponse<AccountInfo>) => {\r\n        if (res.status === httpStatus.OK) {\r\n          this.accountInfo = res.body;\r\n          if (this.accountInfo != null && this.accountInfo.authenticated ) {\r\n            this.saveToCookie(this.accountInfo);\r\n            this.authenticationState.next(this.accountInfo);\r\n            callback.authenticationState(true, this.SUCCESS_MESSAGE);\r\n          } else {\r\n            this.authenticationState.next(null);\r\n            callback.authenticationState(false, this.FAILURE_MESSAGE);\r\n          }\r\n        } else {\r\n          this.authenticationState.next(null);\r\n          callback.authenticationState(false, this.FAILURE_MESSAGE);\r\n        }\r\n        } , (res: HttpErrorResponse) => {\r\n          this.deleteCookie();\r\n          this.authenticationState.next(null);\r\n          callback.authenticationState(false, this.FAILURE_MESSAGE);\r\n        }\r\n      );\r\n  }\r\n\r\n  protected saveToCookie(accountInfo: AccountInfo) {\r\n    this.saveCookieByKey(BendCoreConstants.cookies.AUTHENTICATION_STATE, JSON.stringify(accountInfo.authenticated));\r\n    this.saveCookieByKey(BendCoreConstants.cookies.TOKEN, accountInfo.token);\r\n    this.saveCookieByKey(BendCoreConstants.cookies.AUTHORITIES, JSON.stringify(accountInfo.authorities));\r\n    accountInfo.token = null;\r\n    accountInfo.authorities = [];\r\n    this.saveCookieByKey(BendCoreConstants.cookies.ACCOUNT_INFO, JSON.stringify(accountInfo));\r\n  }\r\n\r\n  refreshToken(token: string) {\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.TOKEN);\r\n    this.saveCookieByKey(BendCoreConstants.cookies.TOKEN, token);\r\n  }\r\n\r\n  retrieveAccountInfo(): Observable<AccountInfo> {\r\n    const cookie = this.retrieveCookieByKey(BendCoreConstants.cookies.ACCOUNT_INFO);\r\n    if (cookie == null || cookie.length < 1) {\r\n      this.accountService.accountInfo().subscribe((resp: HttpResponse<AccountInfo>) => {\r\n        if (resp.status === httpStatus.OK) {\r\n          const accInfo = resp.body;\r\n          this.saveToCookie(accInfo);\r\n          const sub = new Subject();\r\n          sub.next(accInfo);\r\n          return sub.asObservable();\r\n        } else {\r\n          this.consoleService.error('No Account Info Found');\r\n        }\r\n      }, (err: HttpErrorResponse) => {\r\n        this.consoleService.error('Error Occurred During Account Fetch', err);\r\n      });\r\n    }\r\n    this.accountInfo = JSON.parse(cookie );\r\n    const subject = new Subject();\r\n    subject.next(this.accountInfo);\r\n    return subject.asObservable();\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const cookie = this.retrieveCookieByKey(BendCoreConstants.cookies.AUTHENTICATION_STATE);\r\n    if (cookie == null || cookie.length < 1 ) { return false; }\r\n    return JSON.parse(cookie);\r\n  }\r\n\r\n  currentToken(): string {\r\n    return this.retrieveCookieByKey(BendCoreConstants.cookies.TOKEN);\r\n  }\r\n\r\n  authorities(): string[] {\r\n    const authorities = this.retrieveCookieByKey(BendCoreConstants.cookies.AUTHORITIES);\r\n    if (authorities == null || authorities.length < 1) { return []; }\r\n    return JSON.parse(authorities);\r\n  }\r\n\r\n  getAuthenticationState(): Observable<AccountInfo> {\r\n    return this.authenticationState.asObservable();\r\n  }\r\n\r\n  protected deleteCookie() {\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.TOKEN);\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.AUTHORITIES);\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.ACCOUNT_INFO);\r\n    this.deleteCookieByKey(BendCoreConstants.cookies.AUTHENTICATION_STATE);\r\n  }\r\n\r\n  logout(info: LogoutInfo) {\r\n    this.deleteCookie();\r\n    this.authenticationState.next(null);\r\n    this.consoleService.message('Logout Success of User' + info.logoutRule);\r\n  }\r\n\r\n  hasAnyAuthority(authorities: string[]): boolean {\r\n    const grantedAuthorities: string[] = this.authorities();\r\n    for (const auth of authorities) {\r\n      if (grantedAuthorities.includes(auth)) { return true; }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  protected deleteCookieByKey(key: string) {\r\n    this.storageService.remove(key);\r\n  }\r\n\r\n  protected saveCookieByKey(key: string, value: string) {\r\n    this.storageService.put(key, value);\r\n  }\r\n\r\n  protected retrieveCookieByKey(key: string): string {\r\n    return this.storageService.get(key);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StorageService {\r\n\r\n  put(key: string, value: string): StorageService {\r\n    localStorage.setItem(key, value);\r\n    return this;\r\n  }\r\n\r\n  removeAll(): StorageService {\r\n    localStorage.clear();\r\n    return this;\r\n  }\r\n\r\n  get(key: string, valueIfMissing?: string): string {\r\n    const value = localStorage.getItem(key);\r\n    if (value === undefined || value === null) return  valueIfMissing;\r\n    return value;\r\n  }\r\n\r\n  remove(key: string): StorageService {\r\n    localStorage.removeItem(key);\r\n    return this;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BendAccountService} from './bend-account.service';\r\nimport {AbstractAuthenticationService} from './abstract-authentication-service';\r\nimport {ConsoleService} from '../../service/console/console.service';\r\nimport {StorageService} from '../../service/storage/storage-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BendAuthenticationService extends AbstractAuthenticationService {\r\n  constructor(\r\n    accountService: BendAccountService,\r\n    consoleService: ConsoleService,\r\n    storageService: StorageService\r\n  ) {\r\n    super(accountService, consoleService, storageService);\r\n  }\r\n}\r\n","import {Injectable, isDevMode} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {BendAuthenticationService} from '../auth/bend-authentication-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RouterActivateInterceptor implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: BendAuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Promise<boolean> {\r\n    const authorities = route.data.authorities;\r\n    if (authorities == null || authorities.length <= 0 ) {\r\n      return Promise.resolve(\r\n        this.authenticationService.isAuthenticated()\r\n      );\r\n    } else {\r\n      return this.checkLogin(authorities, state.url);\r\n    }\r\n  }\r\n\r\n  checkLogin(authorities: string[], url: string): Promise<boolean> {\r\n    return Promise.resolve(\r\n      this.checkInternally(authorities, url)\r\n    );\r\n  }\r\n\r\n  private checkInternally(authorities: string[], url: string): boolean {\r\n    const authorize = this.authenticationService.hasAnyAuthority(authorities);\r\n    if (!authorize) {\r\n      if (isDevMode()) {\r\n        console.error('User doesn\\'t have any of required authorities: ' + authorities);\r\n      } else {\r\n        this.router.navigate(['accessdenied']);\r\n      }\r\n    }\r\n    return authorize;\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {tap} from 'rxjs/operators';\r\nimport {BendAuthenticationService} from '../../auth/bend-authentication-service';\r\nimport {BendCoreConstants} from '../../../environments/bend-core-constants';\r\n\r\n@Injectable()\r\nexport class RequestTokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authenticationService: BendAuthenticationService\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.authenticationService.isAuthenticated()) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this.authenticationService.currentToken()}`\r\n        }\r\n      });\r\n    }\r\n    return next.handle(req).pipe(tap(evt => {\r\n      if (evt instanceof HttpResponse) {\r\n        const JWT_TOKEN = evt.headers.get(BendCoreConstants.jwt.REFRESHED_JSON_WEB_TOKEN);\r\n        if (JWT_TOKEN != null) {\r\n          this.authenticationService.refreshToken(JWT_TOKEN);\r\n        }\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {BendAuthenticationService} from '../auth/bend-authentication-service';\r\n\r\n\r\n/*If Passed Empty or YES Tag that means it check for authenticated*/\r\n/*If Passed NO Tag that means it check for not authenticated*/\r\n/*ALL OTHER TAG ARE MENTIONED AS YES TAG*/\r\n\r\n@Directive({\r\n  selector: '[bendIsAuthenticated]'\r\n})\r\nexport class BendIsAuthenticatedDirective {\r\n  constructor(private templateRef: TemplateRef<any>,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private authenticationService: BendAuthenticationService\r\n  ) {\r\n  }\r\n\r\n  @Input()\r\n  set bendIsAuthenticated(value: string) {\r\n    this.updateView(value);\r\n    this.authenticationService.getAuthenticationState().subscribe(info => this.updateView(value));\r\n  }\r\n\r\n  private updateView(value: string): void {\r\n    this.viewContainerRef.clear();\r\n    if (this.isAuthenticatedCheck(value) ) { this.viewContainerRef.createEmbeddedView(this.templateRef); }\r\n  }\r\n\r\n  private isAuthenticatedCheck(value: string): boolean {\r\n    const out = this.authenticationService.isAuthenticated();\r\n    return value.toLowerCase() === 'no' ? !out : out;\r\n  }\r\n\r\n}\r\n","import {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\r\nimport {BendAuthenticationService} from '../auth/bend-authentication-service';\r\n\r\n@Directive({\r\n  selector: '[bendHasAnyAuthority]'\r\n})\r\nexport class BendHasAnyAuthorityDirective {\r\n  private authorities: string[];\r\n\r\n  constructor(private templateRef: TemplateRef<any>,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private authenticationService: BendAuthenticationService\r\n  ) {\r\n  }\r\n\r\n  @Input()\r\n  set bendHasAnyAuthority(value: string | string[]) {\r\n    this.authorities = typeof value === 'string' ? [value] : value;\r\n    this.updateView();\r\n    this.authenticationService.getAuthenticationState().subscribe(info => this.updateView());\r\n  }\r\n\r\n  private updateView(): void {\r\n    this.viewContainerRef.clear();\r\n    if (this.hasAnyAuthorityCheck() ) { this.viewContainerRef.createEmbeddedView(this.templateRef); }\r\n  }\r\n\r\n  private hasAnyAuthorityCheck(): boolean {\r\n    if (!this.authenticationService.isAuthenticated()) {return false; }\r\n    return this.authenticationService.hasAnyAuthority(this.authorities);\r\n  }\r\n}\r\n","import {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {AbstractBaseService} from './base.service';\r\nimport {FieldDefinition} from '../model/fetch/field-definition.model';\r\nimport {DataResponse} from '../model/crud/response/data-response.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppUtilService extends AbstractBaseService {\r\n  constructor(\r\n    http: HttpClient\r\n  ) {super('/app-util', http); }\r\n\r\n  checkExistence(table: string, field: string, value: string): Observable<HttpResponse<boolean>> {\r\n    return this.http.get<boolean>(this.PUBLIC_URL + `/single-field-existence-check/${table}/${field}/${value}`, { observe: 'response' });\r\n  }\r\n\r\n  updateAll(fields: FieldDefinition[]): Observable<HttpResponse<DataResponse<Map<string, object>>>> {\r\n    return this.http.post<DataResponse<Map<string, object>>>(this.PRIVATE_URL + `/field-edit`, fields, {observe: 'response'});\r\n  }\r\n}\r\n","import {BaseFetchService} from '../base.service';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {ISqlFetchDefinition} from '../../model/fetch/fetch-definition.model';\r\nimport {FetchResponse} from '../../model/fetch/fetch-response.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SqlFetchDefinitionService extends BaseFetchService<ISqlFetchDefinition, FetchResponse> {\r\n  constructor(\r\n    http: HttpClient\r\n  ) {\r\n    super('/sql-fetch', http);\r\n    this.DEFAULT_URL = this.PUBLIC_URL;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport interface ITextProcessingService {\r\n  camelCaseToSentence(text: string): string ;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TextProcessingService implements ITextProcessingService {\r\n\r\n  public camelCaseToSentence(text: string): string {\r\n    let preparedField = '';\r\n    let isSeparatorFound = false;\r\n    for (let i = 0; i < text.length; i++) {\r\n      const ch = text.charAt(i);\r\n      isSeparatorFound = this.checkSeparator(i, ch, text);\r\n      if (isSeparatorFound) {\r\n        if (i !== 0) preparedField += ' ';\r\n        preparedField += ch.toUpperCase();\r\n      } else preparedField += ch;\r\n\r\n      isSeparatorFound = false;\r\n    }\r\n\r\n    return preparedField;\r\n  }\r\n\r\n  public checkSeparator(indexOfChar: number, currentChar: string, text: string): boolean {\r\n    if (this.isUpperCase(currentChar))\r\n      return true;\r\n\r\n    return indexOfChar === 0;\r\n  }\r\n\r\n  public isUpperCase(currentChar: string): boolean {\r\n    return currentChar >= 'A' && currentChar <= 'Z';\r\n  }\r\n\r\n  public isLowerCase(currentChar: string): boolean {\r\n    return currentChar >= 'a' && currentChar <= 'z';\r\n  }\r\n}\r\n","import {\r\n  FlexibleDataTypes,\r\n  FlexibleIndex,\r\n  FlexibleRuleNameTexts, FlexibleRulePolicyTexts\r\n} from '../model/crud/base-flexible-crud.data';\r\nimport {Injectable} from '@angular/core';\r\n\r\nexport abstract class AbstractBendFlexibleCompilerService {\r\n  AND_SEPARATOR = ' - ';\r\n  private GLOBAL_DEFAULT_VALUE = 'N/A';\r\n\r\n  compile(index: FlexibleIndex, values: any[]): any {\r\n    if (!index.dynamic) {\r\n      return values[index.index];\r\n    } else {\r\n      if (index.flexibleRule.name === FlexibleRuleNameTexts.AND) {\r\n        return this.returnFromAnd(index, values);\r\n      } else if (index.flexibleRule.name === FlexibleRuleNameTexts.OR) {\r\n        return this.returnFromOr(index, values);\r\n      } else if (index.flexibleRule.name === FlexibleRuleNameTexts.BOOL) {\r\n        return this.returnFromBool(index, values);\r\n      }\r\n    }\r\n    return this.GLOBAL_DEFAULT_VALUE;\r\n  }\r\n\r\n  private valueByDataType(objValue: any, dataType: string): string {\r\n    if (objValue == null) {\r\n      return this.GLOBAL_DEFAULT_VALUE;\r\n    }\r\n    switch (dataType) {\r\n      case FlexibleDataTypes.STRING:\r\n        return objValue.toString();\r\n    }\r\n  }\r\n\r\n  protected returnFromAnd(index: FlexibleIndex, values: any[]): any {\r\n    let output = '';\r\n    for (const indexValue of index.flexibleRule.fromIndices) {\r\n      output += this.AND_SEPARATOR + this.valueByDataType(values[indexValue], index.flexibleRule.indicesDataTypes[indexValue]);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  protected returnFromOr(index: FlexibleIndex, values: any[]) {\r\n    switch (index.flexibleRule.rulePolicy.toString()) {\r\n      case FlexibleRulePolicyTexts.CHECKED_BY_NULL:\r\n        return this.basedOnNull(index, values);\r\n    }\r\n    return this.GLOBAL_DEFAULT_VALUE;\r\n  }\r\n\r\n  protected returnFromBool(index: FlexibleIndex, values: any[]): any {\r\n    const indexTop = index.flexibleRule.fromIndices[0];\r\n    if (String(values[indexTop]).toUpperCase() === 'TRUE') {\r\n      return this.valueByDataType(index.flexibleRule.referenceValues[0], this.getByIndex(index.flexibleRule.indicesDataTypes, 0));\r\n    } else {\r\n      return this.valueByDataType(index.flexibleRule.referenceValues[1], this.getByIndex(index.flexibleRule.indicesDataTypes, 1));\r\n    }\r\n  }\r\n\r\n  private getByIndex(indicesDataTypes: string[], index: number): string {\r\n    if (indicesDataTypes == null || indicesDataTypes.length <= index) {\r\n      return FlexibleDataTypes.STRING;\r\n    }\r\n    return indicesDataTypes[index];\r\n  }\r\n\r\n  private basedOnNull(index: FlexibleIndex, values: any[]): any {\r\n    for (const indexValue of index.flexibleRule.fromIndices) {\r\n      if (values[indexValue] != null) {\r\n        return this.valueByDataType(values[indexValue], this.getByIndex(index.flexibleRule.indicesDataTypes, indexValue));\r\n      }\r\n    }\r\n    return this.GLOBAL_DEFAULT_VALUE;\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BendFlexibleCompilerService extends AbstractBendFlexibleCompilerService {\r\n\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {StorageService} from '../../../service/storage/storage-service';\r\nimport {BendCoreConstants} from '../../../environments/bend-core-constants';\r\n\r\n@Injectable()\r\nexport class RoutingDatabaseInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const registryType = this.storageService.get(BendCoreConstants.cookies.routingDatabase.REGISTRY_TYPE);\r\n    const registryValue = this.storageService.get(BendCoreConstants.cookies.routingDatabase.REGISTRY_VALUE);\r\n    if (registryType != null && registryValue != null) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          HDR_RGTR_DTN_TP: registryType,\r\n          HDR_RGTR_DTN_VL: registryValue\r\n        }\r\n      });\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {CommonModule} from '@angular/common';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {BendHasAnyAuthorityDirective} from './security/directive/bend-has-any-authority.directive';\r\nimport {BendIsAuthenticatedDirective} from './security/directive/bend-is-authenticated.directive';\r\nimport {RequestTokenInterceptor} from './security/http/interceptor/request-token-interceptor';\r\nimport {RoutingDatabaseInterceptor} from './security/http/interceptor/routing-database-interceptor';\r\n\r\nconst DIRECTIVES = [BendHasAnyAuthorityDirective, BendIsAuthenticatedDirective];\r\n\r\n@NgModule({\r\n  declarations: [...DIRECTIVES],\r\n  imports: [CommonModule,\r\n    HttpClientModule, BrowserModule, FormsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: RequestTokenInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: RoutingDatabaseInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  exports: [...DIRECTIVES]\r\n})\r\nexport class BendCoreModule { }\r\n"]}