{"version":3,"file":"bend-core-ui.js","sources":["ng://bend-core-ui/lib/ui-model/bend-ui-field.ts","ng://bend-core-ui/lib/ui-model/bend-ui-model.ts","ng://bend-core-ui/lib/model/place.model.ts","ng://bend-core-ui/lib/util/route.util.ts","ng://bend-core-ui/lib/view/bend-base.component.ts","ng://bend-core-ui/lib/view/bend-abstract-list-view.component.ts","ng://bend-core-ui/lib/view/bend-abstract-detail-view.component.ts","ng://bend-core-ui/lib/view/bend-base-lang-component.ts","ng://bend-core-ui/lib/message/bend-toast-position-key.ts","ng://bend-core-ui/lib/message/bend-toast.service.ts","ng://bend-core-ui/lib/dialog/login-dialog/bend-login-dialog.component.ts","ng://bend-core-ui/lib/bend-core-ui.module.ts","ng://bend-core-ui/lib/service/lang-key-service.ts","ng://bend-core-ui/public-api.ts","ng://bend-core-ui/bend-core-ui.ts"],"sourcesContent":["import {ISqlFetchDefinition} from 'bend-core';\r\n\r\nexport class BendUiField {\r\n  name: string;\r\n  viewName: string;\r\n  dataType: DataType;\r\n  fetch: ISqlFetchDefinition; /*When the datatype is select then it's need a list of selection data*/\r\n}\r\n\r\nexport enum DataType {\r\n  TEXT,\r\n  LONG_TEXT,\r\n  SELECT\r\n}\r\n","import {BendUiField} from './bend-ui-field';\r\n\r\nexport class BendUiModel {\r\n  name: string;\r\n  fields: BendUiField[];\r\n  tableStructure: TableStructure;\r\n}\r\n\r\nexport class TableStructure {\r\n  createTitle: string;\r\n  updateTitle: string;\r\n  actionColumn: ActionColumn;\r\n  actionRoute: ActionRoute;\r\n}\r\n\r\nexport class ActionColumn {\r\n  title = 'ACTION';\r\n  actionViewName = 'View';\r\n  actionEditName = 'Edit';\r\n  actionDeleteName = 'Delete';\r\n  actionDisableIndex = 0;\r\n}\r\n\r\nexport class ActionRoute {\r\n  constructor(\r\n    public viewRoute: string = '/bmu-crud/view',\r\n    public editRoute: string = '/bmu-crud/edit',\r\n    public deleteRoute: string = '/bmu-crud/delete'\r\n  ) {\r\n  }\r\n}\r\n","import {BaseData} from 'bend-core';\r\n\r\nexport class GsmLocation extends BaseData {\r\n  latitude: number;\r\n  longitude: number;\r\n  aptitude: number;\r\n}\r\n\r\nexport class Division extends BaseData {\r\n  name: string;\r\n}\r\n\r\nexport class District extends BaseData {\r\n  name: string;\r\n  division: Division;\r\n}\r\n\r\nexport class Thana extends BaseData {\r\n  name: string;\r\n  district: District;\r\n}\r\n\r\nexport class Place extends BaseData {\r\n  name: string;\r\n  thana: Thana;\r\n  location: GsmLocation;\r\n}\r\n","export class RouteUtil {\r\n  public static startFromThis(route: string): string {\r\n    return `/${route}`;\r\n  }\r\n}\r\n","import {RouteUtil} from '../util/route.util';\r\nimport {AuthoritiesConstants, BendCoreConstants, StorageService} from 'bend-core';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {LangKeyService} from \"../service/lang-key-service\";\r\n\r\nexport class BendBaseComponent {\r\n  authoritiesConstants = new AuthoritiesConstants();\r\n  today = new Date();\r\n  private DEF_LANG_KEY = 'en';\r\n\r\n  makeRouteStartFromThis(route: string): string {\r\n    return RouteUtil.startFromThis(route);\r\n  }\r\n\r\n  get authorities(): any {\r\n    return this.authoritiesConstants;\r\n  }\r\n\r\n  prepareTranslate(translate: TranslateService, langKeyService: LangKeyService) {\r\n    translate.setDefaultLang(this.DEF_LANG_KEY);\r\n    translate.use(langKeyService.activatedKey());\r\n  }\r\n}\r\n","import {OnInit} from '@angular/core';\r\nimport {\r\n  AppUtilService, BaseCrudData, BaseData,\r\n  BaseFlexibleCrudViewData, BaseService, BendFlexibleCompilerService,\r\n  BendStatus,\r\n  BendStatusText,\r\n  ConsoleService,\r\n  FlexibleIndex,\r\n  httpStatus,\r\n  PageableDataResponse, StorageService\r\n} from 'bend-core';\r\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\nimport {BendToastService} from '../message/bend-toast.service';\r\nimport {BendUiModel} from '../ui-model/bend-ui-model';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {BendBaseComponent} from './bend-base.component';\r\nimport {LangKeyService} from '../service/lang-key-service';\r\n\r\nexport class BendAbstractListViewComponent<R extends BaseCrudData, Domain extends BaseData> extends BendBaseComponent implements OnInit {\r\n  crudData: PageableDataResponse<BaseFlexibleCrudViewData>;\r\n  private SUCCESS = 'Active Status Changed Successfully';\r\n  private FAILED = 'Active Status Change Failed';\r\n  private domainName: string;\r\n  pageSize = 2;\r\n  pageCount = 0;\r\n  load = false;\r\n\r\n  constructor(\r\n    private crudService: BaseService<R, Domain>,\r\n    private toastService: BendToastService,\r\n    private consoleService: ConsoleService,\r\n    private appUtilService: AppUtilService,\r\n    private compiler: BendFlexibleCompilerService,\r\n    public uiModel: BendUiModel,\r\n    private translate: TranslateService,\r\n    private langKeyService: LangKeyService\r\n  ) { super(); }\r\n\r\n  ngOnInit(): void {\r\n    super.prepareTranslate(this.translate, this.langKeyService);\r\n    this.crudData = this.emptyData();\r\n    this.fetchAll();\r\n  }\r\n\r\n  protected fetchAll() {\r\n    this.crudService.fetchAllFlexible({page: this.pageCount, size: this.pageSize}).subscribe((res: HttpResponse<PageableDataResponse<BaseFlexibleCrudViewData>>) => {\r\n      if (res.status === httpStatus.OK && res.body.status.toString() === BendStatusText.SUCCESS) {\r\n        this.crudData = res.body;\r\n        this.crudData.data.columns.push(this.uiModel.tableStructure.actionColumn.title);\r\n        this.load = true;\r\n      } else {\r\n        this.consoleService.error('Crud Data Fetch Problem');\r\n      }\r\n    }, (error: HttpErrorResponse) => {\r\n      this.consoleService.error('Error Occurred During Crud Data Fetch', error);\r\n    });\r\n  }\r\n\r\n  compile(index: FlexibleIndex, values: any[]): any {\r\n    return this.compiler.compile(index, values);\r\n  }\r\n\r\n  prev() {\r\n    this.pageCount --;\r\n    this.reshape();\r\n    this.fetchAll();\r\n  }\r\n\r\n  isFirstPage(): boolean {\r\n    return this.pageCount === 0;\r\n  }\r\n\r\n  reset() {\r\n    this.pageCount = 0;\r\n    this.fetchAll();\r\n  }\r\n\r\n  next() {\r\n    this.pageCount ++;\r\n    this.reshape();\r\n    this.fetchAll();\r\n  }\r\n\r\n  isLastPage(): boolean {\r\n    return this.pageCount === (this.crudData.totalPages - 1);\r\n  }\r\n\r\n  onPage(event: any) {\r\n    console.log(event);\r\n  }\r\n\r\n  protected reshape() {\r\n    if (this.pageCount < 0) {\r\n      this.pageCount = 0;\r\n    } else if (this.pageCount > this.crudData.totalPages) {\r\n      this.pageCount = this.crudData.totalPages;\r\n    }\r\n  }\r\n\r\n  protected emptyData(): PageableDataResponse<BaseFlexibleCrudViewData> {\r\n    const data = new BaseFlexibleCrudViewData();\r\n    data.columns = [];\r\n    data.indexes = [];\r\n    data.values = [];\r\n    const d = new PageableDataResponse<BaseFlexibleCrudViewData>();\r\n    d.totalPages = 0;\r\n    d.totalElements = 0;\r\n    d.status = BendStatus.FAILURE;\r\n    d.data = data;\r\n    d.dataTypes = [];\r\n    return d;\r\n  }\r\n}\r\n","import {OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {\r\n  BaseCrudData,\r\n  BaseData,\r\n  BaseService,\r\n  BendStatusText,\r\n  ConsoleService,\r\n  DataResponse,\r\n  TextProcessingService\r\n} from 'bend-core';\r\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\nimport {BendToastService} from '../message/bend-toast.service';\r\nimport {BendUiModel} from '../ui-model/bend-ui-model';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {BendBaseComponent} from './bend-base.component';\r\nimport {LangKeyService} from '../service/lang-key-service';\r\n\r\nexport abstract class BendAbstractDetailViewComponent<R extends BaseCrudData, Domain extends BaseData> extends BendBaseComponent implements OnInit {\r\n  private viewId: number;\r\n  ready: boolean;\r\n  crudData: R;\r\n\r\n  constructor(\r\n    protected activatedRoute: ActivatedRoute,\r\n    protected userCrudService: BaseService<R, Domain>,\r\n    protected toastService: BendToastService,\r\n    protected consoleService: ConsoleService,\r\n    protected textProcessingService: TextProcessingService,\r\n    public uiModel: BendUiModel,\r\n    private translate: TranslateService,\r\n    private langKeyService: LangKeyService\r\n  ) { super(); }\r\n\r\n  ngOnInit() {\r\n    super.prepareTranslate(this.translate, this.langKeyService);\r\n    this.ready = false;\r\n    this.viewId = this.activatedRoute.snapshot.params.id;\r\n    if (this.viewId == null)\r\n      this.toastService.error('Cannot fetch view Data, id param empty');\r\n    else this.fetchData();\r\n  }\r\n\r\n  private fetchData() {\r\n    this.userCrudService.findOne(this.viewId).subscribe((res: HttpResponse<DataResponse<R>>) => {\r\n      this.response(res);\r\n    }, (error: HttpErrorResponse) => {\r\n      this.error(error);\r\n    });\r\n  }\r\n\r\n  private response(res: HttpResponse<DataResponse<R>>) {\r\n    if (res.ok && res.body.status.toString() === BendStatusText.SUCCESS) {\r\n      this.consoleService.message('Successfully Fetch Detail View Data');\r\n      this.crudData = res.body.data;\r\n      this.ready = true;\r\n    } else this.toastService.error('Error during Detail View data fetch');\r\n  }\r\n\r\n  private error(error: HttpErrorResponse) {\r\n    this.consoleService.error('Error During Detail View Data Fetch', error);\r\n  }\r\n\r\n  public getAllAvailableFields(baseCrudData: BaseCrudData): string[] {\r\n    const availableFields = Object.getOwnPropertyNames(baseCrudData); /*Delete Current Time*/\r\n    let idx = availableFields.indexOf('currentTime');\r\n    availableFields.splice(idx, idx + 1);\r\n    idx = availableFields.indexOf('id');\r\n    availableFields.splice(idx, idx + 1);\r\n    idx = availableFields.indexOf('password');\r\n    availableFields.splice(idx, idx + 1);\r\n    return availableFields;\r\n  }\r\n\r\n  public getFieldValue(baseCrudData: BaseCrudData, fieldName: string) {\r\n    const descriptor = Object.getOwnPropertyDescriptor(baseCrudData, fieldName);\r\n    const val = descriptor.value;\r\n    if (val == null) return 'N/A';\r\n    if (fieldName === 'active') return val ? 'Active' : 'Inactive';\r\n    return val;\r\n  }\r\n\r\n  prepareField(text: string): string {\r\n    if (text === 'active') return 'Active Status';\r\n    return this.textProcessingService.camelCaseToSentence(text);\r\n  }\r\n}\r\n","import {TranslateService} from '@ngx-translate/core';\r\nimport {OnInit} from '@angular/core';\r\nimport {BendBaseComponent} from './bend-base.component';\r\nimport {LangKeyService} from '../service/lang-key-service';\r\n\r\nexport class BendBaseLangComponent extends BendBaseComponent implements OnInit {\r\n  constructor(\r\n    private translate: TranslateService,\r\n    public langKeyService: LangKeyService\r\n  ) { super();  }\r\n\r\n  ngOnInit(): void {\r\n    super.prepareTranslate(this.translate, this.langKeyService);\r\n  }\r\n}\r\n","export const bendToastPosition = {\r\n  POSITION_CENTER: 'key-center',\r\n  POSITION_TOP_LEFT: 'key-top-left',\r\n  POSITION_TOP_RIGHT: 'key-top-right',\r\n  POSITION_TOP_CENTER: 'key-top-center',\r\n  POSITION_BOTTOM_LEFT: 'key-bottom-left',\r\n  POSITION_BOTTOM_RIGHT: 'key-bottom-right',\r\n  POSITION_BOTTOM_CENTER: 'key-bottom-center',\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Message, MessageService} from 'primeng/api';\r\nimport {bendToastPosition} from './bend-toast-position-key';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BendToastService {\r\n  private SEVERITY_INFO = 'info';\r\n  private SEVERITY_ERROR = 'error';\r\n  private MESSAGE_TITLE = 'Alert';\r\n  private POSITION_KEY_CENTER = 'key-center';\r\n  private POSITION_KEY_BOTTOM_CENTER = 'key-bottom-center';\r\n\r\n  constructor(\r\n    private messageService: MessageService\r\n  ) {\r\n  }\r\n\r\n  info(message: string, position: string = bendToastPosition.POSITION_BOTTOM_CENTER) {\r\n    this.show(message, this.MESSAGE_TITLE, this.SEVERITY_INFO, position);\r\n  }\r\n\r\n  infoBottomCenter(message: string) {\r\n    this.showMessage({severity: this.SEVERITY_INFO, summary: this.MESSAGE_TITLE, detail: message, key: this.POSITION_KEY_BOTTOM_CENTER});\r\n  }\r\n\r\n  error(message: string, position: string = bendToastPosition.POSITION_BOTTOM_CENTER) {\r\n    this.show(message, this.MESSAGE_TITLE, this.SEVERITY_ERROR, position);\r\n  }\r\n\r\n  show(message: string, messageTitle: string, severityType: string, position: string) {\r\n    this.showMessage({severity: severityType, summary: messageTitle, detail: message, key: position});\r\n  }\r\n\r\n  showMessage(message: Message) {\r\n    this.messageService.add(message);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {DynamicDialogConfig, DynamicDialogRef} from 'primeng/dynamicdialog';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {BendAuthenticationService, IAuthenticationCallback, LoginInfo} from 'bend-core';\r\nimport {BendToastService} from '../../message/bend-toast.service';\r\n\r\n\r\nexport class AuthState implements IAuthenticationCallback {\r\n\r\n  constructor(\r\n    private ref: DynamicDialogRef,\r\n    private toastService: BendToastService\r\n  ) {\r\n  }\r\n\r\n  authenticationState(isAuthenticated: boolean, message?: string, error?: HttpErrorResponse): void {\r\n    if (isAuthenticated) {\r\n      this.toastService.info('Authentication Success');\r\n      this.ref.close();\r\n    } else {\r\n      this.toastService.error('Authentication Failed');\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'bend-login-dialog',\r\n  templateUrl: './bend-login-dialog.component.html'\r\n})\r\nexport class BendLoginDialogComponent implements OnInit {\r\n  loginInfo: LoginInfo;\r\n\r\n  constructor(\r\n    private authenticationService: BendAuthenticationService,\r\n    private ref: DynamicDialogRef,\r\n    public config: DynamicDialogConfig,\r\n    private toastService: BendToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginInfo = new LoginInfo();\r\n  }\r\n\r\n  login() {\r\n    this.authenticationService.authenticate(this.loginInfo, new AuthState(this.ref, this.toastService));\r\n  }\r\n\r\n  cancel() {\r\n    this.ref.close();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {BendCoreModule} from 'bend-core';\r\nimport {DynamicDialogModule} from 'primeng/dynamicdialog';\r\nimport {DialogModule} from 'primeng/dialog';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {BendLoginDialogComponent} from './dialog/login-dialog/bend-login-dialog.component';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport {MessageService} from 'primeng/api';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nconst PRIME_NG_MODULES = [\r\n  DynamicDialogModule,\r\n  DialogModule,\r\n  ToastModule,\r\n  InputTextModule,\r\n  ButtonModule\r\n];\r\nconst THIRD_PARTIES_MODULES = [...PRIME_NG_MODULES, BrowserModule, FormsModule];\r\n\r\nconst LIBRARY_MODULE = [BendCoreModule];\r\n\r\nconst COMPONENTS = [BendLoginDialogComponent];\r\nconst ENTRY_COMPONENTS = [BendLoginDialogComponent];\r\n\r\nconst PIPES = [];\r\n\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...PIPES],\r\n  imports: [\r\n    ...LIBRARY_MODULE,\r\n    ...THIRD_PARTIES_MODULES,\r\n    HttpClientModule\r\n  ],\r\n  providers: [MessageService],\r\n  exports: [...PIPES],\r\n  entryComponents: [...ENTRY_COMPONENTS]\r\n})\r\nexport class BendCoreUiModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {BendCoreConstants, ConsoleService, StorageService} from 'bend-core';\r\nimport {BendToastService} from '../message/bend-toast.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LangKeyService {\r\n  private DEF_LANG_KEY = 'en';\r\n  constructor(\r\n    private consoleService: ConsoleService,\r\n    private bendToastService: BendToastService,\r\n    private storageService: StorageService\r\n  ) {\r\n  }\r\n  activeKey(langKey: string) {\r\n    if (this.availableKeys().indexOf(langKey) < 0)\r\n      this.consoleService.error('Theres no language key available for:' + langKey);\r\n    else {\r\n      this.storageService.put(BendCoreConstants.cookies.routingDatabase.REGISTRY_TYPE, BendCoreConstants.cookies.routingDatabase.detectionTypes.LOCALE_KEY);\r\n      this.storageService.put(BendCoreConstants.cookies.routingDatabase.REGISTRY_VALUE, langKey);\r\n      this.storageService.put(BendCoreConstants.cookies.lang.USE_LANG_KEY, langKey);\r\n      this.bendToastService.infoBottomCenter('Language ' + langKey + 'Successfully Changed');\r\n    }\r\n  }\r\n\r\n  public activatedKey(): string {\r\n    const key = this.storageService.get(BendCoreConstants.cookies.lang.USE_LANG_KEY, this.DEF_LANG_KEY);\r\n    return key == null ? this.availableKeys()[0] : key;\r\n  }\r\n\r\n  availableKeys(): string[] {\r\n    return ['en', 'bn'];\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of bend-core-ui\r\n */\r\n\r\nexport * from './lib/ui-model/bend-ui-field';\r\nexport * from './lib/ui-model/bend-ui-model';\r\nexport * from './lib/model/place.model';\r\n\r\nexport * from './lib/view/bend-base.component';\r\nexport * from './lib/view/bend-abstract-list-view.component';\r\nexport * from './lib/view/bend-abstract-detail-view.component';\r\nexport * from './lib/view/bend-base-lang-component';\r\n\r\nexport * from './lib/dialog/login-dialog/bend-login-dialog.component';\r\n\r\nexport * from './lib/message/bend-toast.service';\r\n\r\nexport * from './lib/bend-core-ui.module';\r\n\r\nexport * from './lib/util/route.util';\r\n\r\nexport * from './lib/service/lang-key-service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;IAEA;KAKC;IAAD,kBAAC;AAAD,CAAC,IAAA;IAEW;AAAZ,WAAY,QAAQ;IAClB,uCAAI,CAAA;IACJ,iDAAS,CAAA;IACT,2CAAM,CAAA;AACR,CAAC,EAJW,QAAQ,KAAR,QAAQ;;;ICPpB;KAIC;IAAD,kBAAC;AAAD,CAAC,IAAA;;IAED;KAKC;IAAD,qBAAC;AAAD,CAAC,IAAA;;IAED;QACE,UAAK,GAAG,QAAQ,CAAC;QACjB,mBAAc,GAAG,MAAM,CAAC;QACxB,mBAAc,GAAG,MAAM,CAAC;QACxB,qBAAgB,GAAG,QAAQ,CAAC;QAC5B,uBAAkB,GAAG,CAAC,CAAC;KACxB;IAAD,mBAAC;AAAD,CAAC,IAAA;;IAGC,qBACS,SAAoC,EACpC,SAAoC,EACpC,WAAwC;QAFxC,0BAAA,EAAA,4BAAoC;QACpC,0BAAA,EAAA,4BAAoC;QACpC,4BAAA,EAAA,gCAAwC;QAFxC,cAAS,GAAT,SAAS,CAA2B;QACpC,cAAS,GAAT,SAAS,CAA2B;QACpC,gBAAW,GAAX,WAAW,CAA6B;KAEhD;IACH,kBAAC;AAAD,CAAC;;;IC5BgC,+BAAQ;IAAzC;;KAIC;IAAD,kBAAC;AAAD,CAJA,CAAiC,QAAQ,GAIxC;;IAE6B,4BAAQ;IAAtC;;KAEC;IAAD,eAAC;AAAD,CAFA,CAA8B,QAAQ,GAErC;;IAE6B,4BAAQ;IAAtC;;KAGC;IAAD,eAAC;AAAD,CAHA,CAA8B,QAAQ,GAGrC;;IAE0B,yBAAQ;IAAnC;;KAGC;IAAD,YAAC;AAAD,CAHA,CAA2B,QAAQ,GAGlC;;IAE0B,yBAAQ;IAAnC;;KAIC;IAAD,YAAC;AAAD,CAJA,CAA2B,QAAQ;;;ICtBnC;KAIC;IAHe,uBAAa,GAA3B,UAA4B,KAAa;QACvC,OAAO,MAAI,KAAO,CAAC;KACpB;IACH,gBAAC;AAAD,CAAC;;;ICCD;QACE,yBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAClD,UAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACX,iBAAY,GAAG,IAAI,CAAC;KAc7B;IAZC,kDAAsB,GAAtB,UAAuB,KAAa;QAClC,OAAO,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KACvC;IAED,sBAAI,0CAAW;aAAf;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC;SAClC;;;OAAA;IAED,4CAAgB,GAAhB,UAAiB,SAA2B,EAAE,cAA8B;QAC1E,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC;KAC9C;IACH,wBAAC;AAAD,CAAC;;;ICJmG,iDAAiB;IASnH,uCACU,WAAmC,EACnC,YAA8B,EAC9B,cAA8B,EAC9B,cAA8B,EAC9B,QAAqC,EACtC,OAAoB,EACnB,SAA2B,EAC3B,cAA8B;QARxC,YASI,iBAAO,SAAG;QARJ,iBAAW,GAAX,WAAW,CAAwB;QACnC,kBAAY,GAAZ,YAAY,CAAkB;QAC9B,oBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAQ,GAAR,QAAQ,CAA6B;QACtC,aAAO,GAAP,OAAO,CAAa;QACnB,eAAS,GAAT,SAAS,CAAkB;QAC3B,oBAAc,GAAd,cAAc,CAAgB;QAfhC,aAAO,GAAG,oCAAoC,CAAC;QAC/C,YAAM,GAAG,6BAA6B,CAAC;QAE/C,cAAQ,GAAG,CAAC,CAAC;QACb,eAAS,GAAG,CAAC,CAAC;QACd,UAAI,GAAG,KAAK,CAAC;;KAWC;IAEd,gDAAQ,GAAR;QACE,iBAAM,gBAAgB,YAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAES,gDAAQ,GAAlB;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiE;YACzJ,IAAI,GAAG,CAAC,MAAM,KAAK,UAAU,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,cAAc,CAAC,OAAO,EAAE;gBACzF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;gBACzB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAChF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aAClB;iBAAM;gBACL,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aACtD;SACF,EAAE,UAAC,KAAwB;YAC1B,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;SAC3E,CAAC,CAAC;KACJ;IAED,+CAAO,GAAP,UAAQ,KAAoB,EAAE,MAAa;QACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAC7C;IAED,4CAAI,GAAJ;QACE,IAAI,CAAC,SAAS,EAAG,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,mDAAW,GAAX;QACE,OAAO,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC;KAC7B;IAED,6CAAK,GAAL;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,4CAAI,GAAJ;QACE,IAAI,CAAC,SAAS,EAAG,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,kDAAU,GAAV;QACE,OAAO,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;KAC1D;IAED,8CAAM,GAAN,UAAO,KAAU;QACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KACpB;IAES,+CAAO,GAAjB;QACE,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;YACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;SAC3C;KACF;IAES,iDAAS,GAAnB;QACE,IAAM,IAAI,GAAG,IAAI,wBAAwB,EAAE,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAM,CAAC,GAAG,IAAI,oBAAoB,EAA4B,CAAC;QAC/D,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC;QACpB,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC;QAC9B,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACd,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,CAAC;KACV;IACH,oCAAC;AAAD,CA9FA,CAAoG,iBAAiB;;;ICAN,mDAAiB;IAK9H,yCACY,cAA8B,EAC9B,eAAuC,EACvC,YAA8B,EAC9B,cAA8B,EAC9B,qBAA4C,EAC/C,OAAoB,EACnB,SAA2B,EAC3B,cAA8B;QARxC,YASI,iBAAO,SAAG;QARF,oBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAe,GAAf,eAAe,CAAwB;QACvC,kBAAY,GAAZ,YAAY,CAAkB;QAC9B,oBAAc,GAAd,cAAc,CAAgB;QAC9B,2BAAqB,GAArB,qBAAqB,CAAuB;QAC/C,aAAO,GAAP,OAAO,CAAa;QACnB,eAAS,GAAT,SAAS,CAAkB;QAC3B,oBAAc,GAAd,cAAc,CAAgB;;KAC1B;IAEd,kDAAQ,GAAR;QACE,iBAAM,gBAAgB,YAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACrD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI;YACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;;YAC/D,IAAI,CAAC,SAAS,EAAE,CAAC;KACvB;IAEO,mDAAS,GAAjB;QAAA,iBAMC;QALC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,GAAkC;YACrF,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SACpB,EAAE,UAAC,KAAwB;YAC1B,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACnB,CAAC,CAAC;KACJ;IAEO,kDAAQ,GAAhB,UAAiB,GAAkC;QACjD,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,cAAc,CAAC,OAAO,EAAE;YACnE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;;YAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;KACvE;IAEO,+CAAK,GAAb,UAAc,KAAwB;QACpC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;KACzE;IAEM,+DAAqB,GAA5B,UAA6B,YAA0B;QACrD,IAAM,eAAe,GAAG,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;QACjE,IAAI,GAAG,GAAG,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACjD,eAAe,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QACrC,GAAG,GAAG,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACpC,eAAe,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QACrC,GAAG,GAAG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1C,eAAe,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QACrC,OAAO,eAAe,CAAC;KACxB;IAEM,uDAAa,GAApB,UAAqB,YAA0B,EAAE,SAAiB;QAChE,IAAM,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC5E,IAAM,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC;QAC7B,IAAI,GAAG,IAAI,IAAI;YAAE,OAAO,KAAK,CAAC;QAC9B,IAAI,SAAS,KAAK,QAAQ;YAAE,OAAO,GAAG,GAAG,QAAQ,GAAG,UAAU,CAAC;QAC/D,OAAO,GAAG,CAAC;KACZ;IAED,sDAAY,GAAZ,UAAa,IAAY;QACvB,IAAI,IAAI,KAAK,QAAQ;YAAE,OAAO,eAAe,CAAC;QAC9C,OAAO,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;KAC7D;IACH,sCAAC;AAAD,CApEA,CAA+G,iBAAiB;;;ICbrF,yCAAiB;IAC1D,+BACU,SAA2B,EAC5B,cAA8B;QAFvC,YAGI,iBAAO,SAAI;QAFL,eAAS,GAAT,SAAS,CAAkB;QAC5B,oBAAc,GAAd,cAAc,CAAgB;;KACxB;IAEf,wCAAQ,GAAR;QACE,iBAAM,gBAAgB,YAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KAC7D;IACH,4BAAC;AAAD,CATA,CAA2C,iBAAiB;;ACLrD,IAAM,iBAAiB,GAAG;IAC/B,eAAe,EAAE,YAAY;IAC7B,iBAAiB,EAAE,cAAc;IACjC,kBAAkB,EAAE,eAAe;IACnC,mBAAmB,EAAE,gBAAgB;IACrC,oBAAoB,EAAE,iBAAiB;IACvC,qBAAqB,EAAE,kBAAkB;IACzC,sBAAsB,EAAE,mBAAmB;CAC5C;;;ICIC,0BACU,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAPhC,kBAAa,GAAG,MAAM,CAAC;QACvB,mBAAc,GAAG,OAAO,CAAC;QACzB,kBAAa,GAAG,OAAO,CAAC;QACxB,wBAAmB,GAAG,YAAY,CAAC;QACnC,+BAA0B,GAAG,mBAAmB,CAAC;KAKxD;IAED,+BAAI,GAAJ,UAAK,OAAe,EAAE,QAA2D;QAA3D,yBAAA,EAAA,WAAmB,iBAAiB,CAAC,sBAAsB;QAC/E,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;KACtE;IAED,2CAAgB,GAAhB,UAAiB,OAAe;QAC9B,IAAI,CAAC,WAAW,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,0BAA0B,EAAC,CAAC,CAAC;KACtI;IAED,gCAAK,GAAL,UAAM,OAAe,EAAE,QAA2D;QAA3D,yBAAA,EAAA,WAAmB,iBAAiB,CAAC,sBAAsB;QAChF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;KACvE;IAED,+BAAI,GAAJ,UAAK,OAAe,EAAE,YAAoB,EAAE,YAAoB,EAAE,QAAgB;QAChF,IAAI,CAAC,WAAW,CAAC,EAAC,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAC,CAAC,CAAC;KACnG;IAED,sCAAW,GAAX,UAAY,OAAgB;QAC1B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAClC;;gBAtByB,cAAc;;;IAR7B,gBAAgB;QAD5B,UAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;OACtB,gBAAgB,CA+B5B;2BApCD;CAKA;;;ICIE,mBACU,GAAqB,EACrB,YAA8B;QAD9B,QAAG,GAAH,GAAG,CAAkB;QACrB,iBAAY,GAAZ,YAAY,CAAkB;KAEvC;IAED,uCAAmB,GAAnB,UAAoB,eAAwB,EAAE,OAAgB,EAAE,KAAyB;QACvF,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YACjD,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAClD;KACF;IACH,gBAAC;AAAD,CAAC,IAAA;;IASC,kCACU,qBAAgD,EAChD,GAAqB,EACtB,MAA2B,EAC1B,YAA8B;QAH9B,0BAAqB,GAArB,qBAAqB,CAA2B;QAChD,QAAG,GAAH,GAAG,CAAkB;QACtB,WAAM,GAAN,MAAM,CAAqB;QAC1B,iBAAY,GAAZ,YAAY,CAAkB;KACnC;IAEL,2CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;KAClC;IAED,wCAAK,GAAL;QACE,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;KACrG;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;KAClB;;gBAhBgC,yBAAyB;gBAC3C,gBAAgB;gBACd,mBAAmB;gBACZ,gBAAgB;;IAP7B,wBAAwB;QAJpC,SAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,u1BAAiD;SAClD,CAAC;OACW,wBAAwB,CAqBpC;IAAD,+BAAC;CArBD;;AChBA,IAAM,gBAAgB,GAAG;IACvB,mBAAmB;IACnB,YAAY;IACZ,WAAW;IACX,eAAe;IACf,YAAY;CACb,CAAC;AACF,IAAM,qBAAqB,YAAO,gBAAgB,GAAE,aAAa,EAAE,WAAW,EAAC,CAAC;AAEhF,IAAM,cAAc,GAAG,CAAC,cAAc,CAAC,CAAC;AAExC,IAAM,UAAU,GAAG,CAAC,wBAAwB,CAAC,CAAC;AAC9C,IAAM,gBAAgB,GAAG,CAAC,wBAAwB,CAAC,CAAC;AAEpD,IAAM,KAAK,GAAG,EAAE,CAAC;;IAajB;KAAiC;IAApB,gBAAgB;QAX5B,QAAQ,CAAC;YACR,YAAY,WAAM,UAAU,EAAK,KAAK,CAAC;YACvC,OAAO,WACF,cAAc,EACd,qBAAqB;gBACxB,gBAAgB;cACjB;YACD,SAAS,EAAE,CAAC,cAAc,CAAC;YAC3B,OAAO,WAAM,KAAK,CAAC;YACnB,eAAe,WAAM,gBAAgB,CAAC;SACvC,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAjC;;;IC/BE,wBACU,cAA8B,EAC9B,gBAAkC,EAClC,cAA8B;QAF9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAJhC,iBAAY,GAAG,IAAI,CAAC;KAM3B;IACD,kCAAS,GAAT,UAAU,OAAe;QACvB,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;YAC3C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,uCAAuC,GAAG,OAAO,CAAC,CAAC;aAC1E;YACH,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,eAAe,CAAC,aAAa,EAAE,iBAAiB,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACtJ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YAC3F,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YAC9E,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,GAAG,OAAO,GAAG,sBAAsB,CAAC,CAAC;SACxF;KACF;IAEM,qCAAY,GAAnB;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACpG,OAAO,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACpD;IAED,sCAAa,GAAb;QACE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KACrB;;gBAvByB,cAAc;gBACZ,gBAAgB;gBAClB,cAAc;;;IAL7B,cAAc;QAH1B,UAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,cAAc,CA2B1B;yBAlCD;CAOA;;ACPA;;;;ACAA;;;;;;"}