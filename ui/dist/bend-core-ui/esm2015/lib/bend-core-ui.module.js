import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { BendCoreModule } from 'bend-core';
import { DynamicDialogModule } from 'primeng/dynamicdialog';
import { DialogModule } from 'primeng/dialog';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';
import { BendLoginDialogComponent } from './dialog/login-dialog/bend-login-dialog.component';
import { ToastModule } from 'primeng/toast';
import { MessageService } from 'primeng/api';
import { InputTextModule } from 'primeng/inputtext';
import { ButtonModule } from 'primeng/button';
import { HttpClientModule } from '@angular/common/http';
const PRIME_NG_MODULES = [
    DynamicDialogModule,
    DialogModule,
    ToastModule,
    InputTextModule,
    ButtonModule
];
const THIRD_PARTIES_MODULES = [...PRIME_NG_MODULES, BrowserModule, FormsModule];
const LIBRARY_MODULE = [BendCoreModule];
const COMPONENTS = [BendLoginDialogComponent];
const ENTRY_COMPONENTS = [BendLoginDialogComponent];
const PIPES = [];
let BendCoreUiModule = class BendCoreUiModule {
};
BendCoreUiModule = __decorate([
    NgModule({
        declarations: [...COMPONENTS, ...PIPES],
        imports: [
            ...LIBRARY_MODULE,
            ...THIRD_PARTIES_MODULES,
            HttpClientModule
        ],
        providers: [MessageService],
        exports: [...PIPES],
        entryComponents: [...ENTRY_COMPONENTS]
    })
], BendCoreUiModule);
export { BendCoreUiModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVuZC1jb3JlLXVpLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2JlbmQtY29yZS11aS8iLCJzb3VyY2VzIjpbImxpYi9iZW5kLWNvcmUtdWkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDekMsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzVDLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sbURBQW1ELENBQUM7QUFDM0YsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBQzNDLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDNUMsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFdEQsTUFBTSxnQkFBZ0IsR0FBRztJQUN2QixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7SUFDWCxlQUFlO0lBQ2YsWUFBWTtDQUNiLENBQUM7QUFDRixNQUFNLHFCQUFxQixHQUFHLENBQUMsR0FBRyxnQkFBZ0IsRUFBRSxhQUFhLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFFaEYsTUFBTSxjQUFjLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUV4QyxNQUFNLFVBQVUsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFDOUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFFcEQsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO0FBYWpCLElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0NBQUksQ0FBQTtBQUFwQixnQkFBZ0I7SUFYNUIsUUFBUSxDQUFDO1FBQ1IsWUFBWSxFQUFFLENBQUMsR0FBRyxVQUFVLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFDdkMsT0FBTyxFQUFFO1lBQ1AsR0FBRyxjQUFjO1lBQ2pCLEdBQUcscUJBQXFCO1lBQ3hCLGdCQUFnQjtTQUNqQjtRQUNELFNBQVMsRUFBRSxDQUFDLGNBQWMsQ0FBQztRQUMzQixPQUFPLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUNuQixlQUFlLEVBQUUsQ0FBQyxHQUFHLGdCQUFnQixDQUFDO0tBQ3ZDLENBQUM7R0FDVyxnQkFBZ0IsQ0FBSTtTQUFwQixnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0JlbmRDb3JlTW9kdWxlfSBmcm9tICdiZW5kLWNvcmUnO1xyXG5pbXBvcnQge0R5bmFtaWNEaWFsb2dNb2R1bGV9IGZyb20gJ3ByaW1lbmcvZHluYW1pY2RpYWxvZyc7XHJcbmltcG9ydCB7RGlhbG9nTW9kdWxlfSBmcm9tICdwcmltZW5nL2RpYWxvZyc7XHJcbmltcG9ydCB7QnJvd3Nlck1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7Rm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHtCZW5kTG9naW5EaWFsb2dDb21wb25lbnR9IGZyb20gJy4vZGlhbG9nL2xvZ2luLWRpYWxvZy9iZW5kLWxvZ2luLWRpYWxvZy5jb21wb25lbnQnO1xyXG5pbXBvcnQge1RvYXN0TW9kdWxlfSBmcm9tICdwcmltZW5nL3RvYXN0JztcclxuaW1wb3J0IHtNZXNzYWdlU2VydmljZX0gZnJvbSAncHJpbWVuZy9hcGknO1xyXG5pbXBvcnQge0lucHV0VGV4dE1vZHVsZX0gZnJvbSAncHJpbWVuZy9pbnB1dHRleHQnO1xyXG5pbXBvcnQge0J1dHRvbk1vZHVsZX0gZnJvbSAncHJpbWVuZy9idXR0b24nO1xyXG5pbXBvcnQge0h0dHBDbGllbnRNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuXHJcbmNvbnN0IFBSSU1FX05HX01PRFVMRVMgPSBbXHJcbiAgRHluYW1pY0RpYWxvZ01vZHVsZSxcclxuICBEaWFsb2dNb2R1bGUsXHJcbiAgVG9hc3RNb2R1bGUsXHJcbiAgSW5wdXRUZXh0TW9kdWxlLFxyXG4gIEJ1dHRvbk1vZHVsZVxyXG5dO1xyXG5jb25zdCBUSElSRF9QQVJUSUVTX01PRFVMRVMgPSBbLi4uUFJJTUVfTkdfTU9EVUxFUywgQnJvd3Nlck1vZHVsZSwgRm9ybXNNb2R1bGVdO1xyXG5cclxuY29uc3QgTElCUkFSWV9NT0RVTEUgPSBbQmVuZENvcmVNb2R1bGVdO1xyXG5cclxuY29uc3QgQ09NUE9ORU5UUyA9IFtCZW5kTG9naW5EaWFsb2dDb21wb25lbnRdO1xyXG5jb25zdCBFTlRSWV9DT01QT05FTlRTID0gW0JlbmRMb2dpbkRpYWxvZ0NvbXBvbmVudF07XHJcblxyXG5jb25zdCBQSVBFUyA9IFtdO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFsuLi5DT01QT05FTlRTLCAuLi5QSVBFU10sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgLi4uTElCUkFSWV9NT0RVTEUsXHJcbiAgICAuLi5USElSRF9QQVJUSUVTX01PRFVMRVMsXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlXHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtNZXNzYWdlU2VydmljZV0sXHJcbiAgZXhwb3J0czogWy4uLlBJUEVTXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFsuLi5FTlRSWV9DT01QT05FTlRTXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQmVuZENvcmVVaU1vZHVsZSB7IH1cclxuIl19